{"pageProps":{"detail":{"type":"前端","sub":"js","id":"原生js替换jQuery各种方法-中文版","content":"<div><p>原文<a data-target=\"_blank\"  referrerpolicy=\"no-referrer\" href=\"https://github.com/nefe/You-Dont-Need-jQuery/blob/master/README.zh-CN.md\">https://github.com/nefe/You-Dont-Need-jQuery/blob/master/README.zh-CN.md</a></p>\n<h2>You Don't Need jQuery <a data-target=\"_blank\"  referrerpolicy=\"no-referrer\" href=\"https://travis-ci.org/oneuijs/You-Dont-Need-jQuery\"><img src=\"https://travis-ci.org/oneuijs/You-Dont-Need-jQuery.svg\" alt=\"Build Status\"></a></h2>\n<p>前端发展很快，现代浏览器原生 API 已经足够好用。我们并不需要为了操作 DOM、Event 等再学习一下 jQuery 的 API。同时由于 React、Angular、Vue 等框架的流行，直接操作 DOM 不再是好的模式，jQuery 使用场景大大减少。本项目总结了大部分 jQuery API 替代的方法，暂时只支持 IE10 以上浏览器。</p>\n<h2>目录</h2>\n<ol>\n<li><a data-target=\"_blank\"  referrerpolicy=\"no-referrer\" href=\"#translations\">Translations</a></li>\n<li><a data-target=\"_blank\"  referrerpolicy=\"no-referrer\" href=\"#query-selector\">Query Selector</a></li>\n<li><a data-target=\"_blank\"  referrerpolicy=\"no-referrer\" href=\"#css--style\">CSS &amp; Style</a></li>\n<li><a data-target=\"_blank\"  referrerpolicy=\"no-referrer\" href=\"#dom-manipulation\">DOM Manipulation</a></li>\n<li><a data-target=\"_blank\"  referrerpolicy=\"no-referrer\" href=\"#ajax\">Ajax</a></li>\n<li><a data-target=\"_blank\"  referrerpolicy=\"no-referrer\" href=\"#events\">Events</a></li>\n<li><a data-target=\"_blank\"  referrerpolicy=\"no-referrer\" href=\"#utilities\">Utilities</a></li>\n<li><a data-target=\"_blank\"  referrerpolicy=\"no-referrer\" href=\"#promises\">Promises</a></li>\n<li><a data-target=\"_blank\"  referrerpolicy=\"no-referrer\" href=\"#animation\">Animation</a></li>\n<li><a data-target=\"_blank\"  referrerpolicy=\"no-referrer\" href=\"#alternatives\">Alternatives</a></li>\n<li><a data-target=\"_blank\"  referrerpolicy=\"no-referrer\" href=\"#browser-support\">Browser Support</a></li>\n</ol>\n<h2>Translations</h2>\n<ul>\n<li><a data-target=\"_blank\"  referrerpolicy=\"no-referrer\" href=\"./README.ko-KR.md\">한국어</a></li>\n<li><a data-target=\"_blank\"  referrerpolicy=\"no-referrer\" href=\"./README.zh-CN.md\">简体中文</a></li>\n<li><a data-target=\"_blank\"  referrerpolicy=\"no-referrer\" href=\"./README-my.md\">Bahasa Melayu</a></li>\n<li><a data-target=\"_blank\"  referrerpolicy=\"no-referrer\" href=\"./README-id.md\">Bahasa Indonesia</a></li>\n<li><a data-target=\"_blank\"  referrerpolicy=\"no-referrer\" href=\"./README.pt-BR.md\">Português(PT-BR)</a></li>\n<li><a data-target=\"_blank\"  referrerpolicy=\"no-referrer\" href=\"./README-vi.md\">Tiếng Việt Nam</a></li>\n<li><a data-target=\"_blank\"  referrerpolicy=\"no-referrer\" href=\"./README-es.md\">Español</a></li>\n<li><a data-target=\"_blank\"  referrerpolicy=\"no-referrer\" href=\"./README-ru.md\">Русский</a></li>\n<li><a data-target=\"_blank\"  referrerpolicy=\"no-referrer\" href=\"./README-kg.md\">Кыргызча</a></li>\n<li><a data-target=\"_blank\"  referrerpolicy=\"no-referrer\" href=\"./README-tr.md\">Türkçe</a></li>\n<li><a data-target=\"_blank\"  referrerpolicy=\"no-referrer\" href=\"./README-it.md\">Italiano</a></li>\n<li><a data-target=\"_blank\"  referrerpolicy=\"no-referrer\" href=\"./README-fr.md\">Français</a></li>\n<li><a data-target=\"_blank\"  referrerpolicy=\"no-referrer\" href=\"./README-ja.md\">日本語</a></li>\n<li><a data-target=\"_blank\"  referrerpolicy=\"no-referrer\" href=\"./README-pl.md\">Polski</a></li>\n</ul>\n<h2>Query Selector</h2>\n<p>常用的 class、id、属性 选择器都可以使用 <code>document.querySelector</code> 或 <code>document.querySelectorAll</code> 替代。区别是</p>\n<ul>\n<li><code>document.querySelector</code> 返回第一个匹配的 Element</li>\n<li><code>document.querySelectorAll</code> 返回所有匹配的 Element 组成的 NodeList。它可以通过 <code>[].slice.call()</code> 把它转成 Array</li>\n<li>如果匹配不到任何 Element，jQuery 返回空数组 <code>[]</code>，但 <code>document.querySelector</code> 返回 <code>null</code>，注意空指针异常。当找不到时，也可以使用 <code>||</code> 设置默认的值，如 <code>document.querySelectorAll(selector) || []</code></li>\n</ul>\n<blockquote>\n<p>注意：<code>document.querySelector</code> 和 <code>document.querySelectorAll</code> 性能很<strong>差</strong>。如果想提高性能，尽量使用 <code>document.getElementById</code>、<code>document.getElementsByClassName</code> 或 <code>document.getElementsByTagName</code>。</p>\n</blockquote>\n<ul>\n<li>\n<p><a data-target=\"_blank\"  referrerpolicy=\"no-referrer\" href=\"#1.0\">1.0</a> <a data-target=\"_blank\"  referrerpolicy=\"no-referrer\" name='1.0'></a> 选择器查询</p>\n<pre><code class=\"language-js\">// jQuery\n$('selector');\n\n// Native\ndocument.querySelectorAll('selector');\n</code></pre>\n</li>\n<li>\n<p><a data-target=\"_blank\"  referrerpolicy=\"no-referrer\" href=\"#1.1\">1.1</a> <a data-target=\"_blank\"  referrerpolicy=\"no-referrer\" name='1.1'></a> class 查询</p>\n<pre><code class=\"language-js\">// jQuery\n$('.class');\n\n// Native\ndocument.querySelectorAll('.class');\n\n// or\ndocument.getElementsByClassName('class');\n</code></pre>\n</li>\n<li>\n<p><a data-target=\"_blank\"  referrerpolicy=\"no-referrer\" href=\"#1.2\">1.2</a> <a data-target=\"_blank\"  referrerpolicy=\"no-referrer\" name='1.2'></a> id 查询</p>\n<pre><code class=\"language-js\">// jQuery\n$('#id');\n\n// Native\ndocument.querySelector('#id');\n\n// or\ndocument.getElementById('id');\n</code></pre>\n</li>\n<li>\n<p><a data-target=\"_blank\"  referrerpolicy=\"no-referrer\" href=\"#1.3\">1.3</a> <a data-target=\"_blank\"  referrerpolicy=\"no-referrer\" name='1.3'></a> 属性查询</p>\n<pre><code class=\"language-js\">// jQuery\n$('a[target=_blank]');\n\n// Native\ndocument.querySelectorAll('a[target=_blank]');\n</code></pre>\n</li>\n<li>\n<p><a data-target=\"_blank\"  referrerpolicy=\"no-referrer\" href=\"#1.4\">1.4</a> <a data-target=\"_blank\"  referrerpolicy=\"no-referrer\" name='1.4'></a> 后代查询</p>\n<pre><code class=\"language-js\">// jQuery\n$el.find('li');\n\n// Native\nel.querySelectorAll('li');\n</code></pre>\n</li>\n<li>\n<p><a data-target=\"_blank\"  referrerpolicy=\"no-referrer\" href=\"#1.5\">1.5</a> <a data-target=\"_blank\"  referrerpolicy=\"no-referrer\" name='1.5'></a> 兄弟及上下元素</p>\n<ul>\n<li>\n<p>兄弟元素</p>\n<pre><code class=\"language-js\">// jQuery\n$el.siblings();\n\n// Native - latest, Edge13+\n[...el.parentNode.children].filter((child) =&gt;\n  child !== el\n);\n// Native (alternative) - latest, Edge13+\nArray.from(el.parentNode.children).filter((child) =&gt;\n  child !== el\n);\n// Native - IE10+\nArray.prototype.filter.call(el.parentNode.children, (child) =&gt;\n  child !== el\n);\n</code></pre>\n</li>\n<li>\n<p>上一个元素</p>\n<pre><code class=\"language-js\">// jQuery\n$el.prev();\n\n// Native\nel.previousElementSibling;\n\n</code></pre>\n</li>\n<li>\n<p>下一个元素</p>\n<pre><code class=\"language-js\">// next\n$el.next();\n\n// Native\nel.nextElementSibling;\n</code></pre>\n</li>\n</ul>\n</li>\n<li>\n<p><a data-target=\"_blank\"  referrerpolicy=\"no-referrer\" href=\"#1.6\">1.6</a> <a data-target=\"_blank\"  referrerpolicy=\"no-referrer\" name='1.6'></a> Closest</p>\n<p>Closest 获得匹配选择器的第一个祖先元素，从当前元素开始沿 DOM 树向上。</p>\n<pre><code class=\"language-js\">// jQuery\n$el.closest(queryString);\n\n// Native - Only latest, NO IE\nel.closest(selector);\n\n// Native - IE10+\nfunction closest(el, selector) {\n  const matchesSelector = el.matches || el.webkitMatchesSelector || el.mozMatchesSelector || el.msMatchesSelector;\n\n  while (el) {\n    if (matchesSelector.call(el, selector)) {\n      return el;\n    } else {\n      el = el.parentElement;\n    }\n  }\n  return null;\n}\n</code></pre>\n</li>\n<li>\n<p><a data-target=\"_blank\"  referrerpolicy=\"no-referrer\" href=\"#1.7\">1.7</a> <a data-target=\"_blank\"  referrerpolicy=\"no-referrer\" name='1.7'></a> Parents Until</p>\n<p>获取当前每一个匹配元素集的祖先，不包括匹配元素的本身。</p>\n<pre><code class=\"language-js\">// jQuery\n$el.parentsUntil(selector, filter);\n\n// Native\nfunction parentsUntil(el, selector, filter) {\n  const result = [];\n  const matchesSelector = el.matches || el.webkitMatchesSelector || el.mozMatchesSelector || el.msMatchesSelector;\n\n  // match start from parent\n  el = el.parentElement;\n  while (el &amp;&amp; !matchesSelector.call(el, selector)) {\n    if (!filter) {\n      result.push(el);\n    } else {\n      if (matchesSelector.call(el, filter)) {\n        result.push(el);\n      }\n    }\n    el = el.parentElement;\n  }\n  return result;\n}\n</code></pre>\n</li>\n<li>\n<p><a data-target=\"_blank\"  referrerpolicy=\"no-referrer\" href=\"#1.8\">1.8</a> <a data-target=\"_blank\"  referrerpolicy=\"no-referrer\" name='1.8'></a> Form</p>\n<ul>\n<li>\n<p>Input/Textarea</p>\n<pre><code class=\"language-js\">// jQuery\n$('#my-input').val();\n\n// Native\ndocument.querySelector('#my-input').value;\n</code></pre>\n</li>\n<li>\n<p>获取 e.currentTarget 在 <code>.radio</code> 中的数组索引</p>\n<pre><code class=\"language-js\">// jQuery\n$('.radio').index(e.currentTarget);\n\n// Native\nArray.prototype.indexOf.call(document.querySelectorAll('.radio'), e.currentTarget);\n</code></pre>\n</li>\n</ul>\n</li>\n<li>\n<p><a data-target=\"_blank\"  referrerpolicy=\"no-referrer\" href=\"#1.9\">1.9</a> <a data-target=\"_blank\"  referrerpolicy=\"no-referrer\" name='1.9'></a> Iframe Contents</p>\n<p>jQuery 对象的 iframe <code>contents()</code> 返回的是 iframe 内的 <code>document</code></p>\n<ul>\n<li>\n<p>Iframe contents</p>\n<pre><code class=\"language-js\">// jQuery\n$iframe.contents();\n\n// Native\niframe.contentDocument;\n</code></pre>\n</li>\n<li>\n<p>Iframe Query</p>\n<pre><code class=\"language-js\">// jQuery\n$iframe.contents().find('.css');\n\n// Native\niframe.contentDocument.querySelectorAll('.css');\n</code></pre>\n</li>\n</ul>\n</li>\n<li>\n<p><a data-target=\"_blank\"  referrerpolicy=\"no-referrer\" href=\"#1.10\">1.10</a> <a data-target=\"_blank\"  referrerpolicy=\"no-referrer\" name='1.10'></a> 获取 body</p>\n<pre><code class=\"language-js\">// jQuery\n$('body');\n\n// Native\ndocument.body;\n</code></pre>\n</li>\n<li>\n<p><a data-target=\"_blank\"  referrerpolicy=\"no-referrer\" href=\"#1.11\">1.11</a> <a data-target=\"_blank\"  referrerpolicy=\"no-referrer\" name='1.11'></a> 获取或设置属性</p>\n<ul>\n<li>\n<p>获取属性</p>\n<pre><code class=\"language-js\">// jQuery\n$el.attr('foo');\n\n// Native\nel.getAttribute('foo');\n</code></pre>\n</li>\n<li>\n<p>设置属性</p>\n<pre><code class=\"language-js\">// jQuery, note that this works in memory without change the DOM\n$el.attr('foo', 'bar');\n\n// Native\nel.setAttribute('foo', 'bar');\n</code></pre>\n</li>\n<li>\n<p>获取 <code>data-</code> 属性</p>\n<pre><code class=\"language-js\">// jQuery\n$el.data('foo');\n\n// Native (use `getAttribute`)\nel.getAttribute('data-foo');\n\n// Native (use `dataset` if only need to support IE 11+)\nel.dataset['foo'];\n</code></pre>\n</li>\n</ul>\n</li>\n</ul>\n<p><strong><a data-target=\"_blank\"  referrerpolicy=\"no-referrer\" href=\"#%E7%9B%AE%E5%BD%95\">⬆ 回到顶部</a></strong></p>\n<h2>CSS &amp; Style</h2>\n<ul>\n<li>\n<p><a data-target=\"_blank\"  referrerpolicy=\"no-referrer\" href=\"#2.1\">2.1</a> <a data-target=\"_blank\"  referrerpolicy=\"no-referrer\" name='2.1'></a> CSS</p>\n<ul>\n<li>\n<p>Get style</p>\n<pre><code class=\"language-js\">// jQuery\n$el.css(&quot;color&quot;);\n\n// Native\n// 注意：此处为了解决当 style 值为 auto 时，返回 auto 的问题\nconst win = el.ownerDocument.defaultView;\n\n// null 的意思是不返回伪类元素\nwin.getComputedStyle(el, null).color;\n</code></pre>\n</li>\n<li>\n<p>Set style</p>\n<pre><code class=\"language-js\">// jQuery\n$el.css({ color: &quot;#ff0011&quot; });\n\n// Native\nel.style.color = '#ff0011';\n</code></pre>\n</li>\n<li>\n<p>Get/Set Styles</p>\n<p>注意，如果想一次设置多个 style，可以参考 oui-dom-utils 中 <a data-target=\"_blank\"  referrerpolicy=\"no-referrer\" href=\"https://github.com/oneuijs/oui-dom-utils/blob/master/src/index.js#L194\">setStyles</a> 方法</p>\n</li>\n<li>\n<p>Add class</p>\n<pre><code class=\"language-js\">// jQuery\n$el.addClass(className);\n\n// Native\nel.classList.add(className);\n</code></pre>\n</li>\n<li>\n<p>Remove class</p>\n<pre><code class=\"language-js\">// jQuery\n$el.removeClass(className);\n\n// Native\nel.classList.remove(className);\n</code></pre>\n</li>\n<li>\n<p>has class</p>\n<pre><code class=\"language-js\">// jQuery\n$el.hasClass(className);\n\n// Native\nel.classList.contains(className);\n</code></pre>\n</li>\n<li>\n<p>Toggle class</p>\n<pre><code class=\"language-js\">// jQuery\n$el.toggleClass(className);\n\n// Native\nel.classList.toggle(className);\n</code></pre>\n</li>\n</ul>\n</li>\n<li>\n<p><a data-target=\"_blank\"  referrerpolicy=\"no-referrer\" href=\"#2.2\">2.2</a> <a data-target=\"_blank\"  referrerpolicy=\"no-referrer\" name='2.2'></a> Width &amp; Height</p>\n<p>Width 与 Height 获取方法相同，下面以 Height 为例：</p>\n<ul>\n<li>\n<p>Window height</p>\n<pre><code class=\"language-js\">// window height\n$(window).height();\n\n// 含 scrollbar\nwindow.document.documentElement.clientHeight;\n\n// 不含 scrollbar，与 jQuery 行为一致\nwindow.innerHeight;\n</code></pre>\n</li>\n<li>\n<p>Document height</p>\n<pre><code class=\"language-js\">// jQuery\n$(document).height();\n\n// Native\nconst body = document.body;\nconst html = document.documentElement;\nconst height = Math.max(\n  body.offsetHeight,\n  body.scrollHeight,\n  html.clientHeight,\n  html.offsetHeight,\n  html.scrollHeight\n);\n</code></pre>\n</li>\n<li>\n<p>Element height</p>\n<pre><code class=\"language-js\">// jQuery\n$el.height();\n\n// Native\nfunction getHeight(el) {\n  const styles = this.getComputedStyle(el);\n  const height = el.offsetHeight;\n  const borderTopWidth = parseFloat(styles.borderTopWidth);\n  const borderBottomWidth = parseFloat(styles.borderBottomWidth);\n  const paddingTop = parseFloat(styles.paddingTop);\n  const paddingBottom = parseFloat(styles.paddingBottom);\n  return height - borderBottomWidth - borderTopWidth - paddingTop - paddingBottom;\n}\n\n// 精确到整数（border-box 时为 height - border 值，content-box 时为 height + padding 值）\nel.clientHeight;\n\n// 精确到小数（border-box 时为 height 值，content-box 时为 height + padding + border 值）\nel.getBoundingClientRect().height;\n</code></pre>\n</li>\n</ul>\n</li>\n<li>\n<p><a data-target=\"_blank\"  referrerpolicy=\"no-referrer\" href=\"#2.3\">2.3</a> <a data-target=\"_blank\"  referrerpolicy=\"no-referrer\" name='2.3'></a> Position &amp; Offset</p>\n<ul>\n<li>\n<p>Position</p>\n<p>获得匹配元素相对父元素的偏移</p>\n<pre><code class=\"language-js\">// jQuery\n$el.position();\n\n// Native\n{ left: el.offsetLeft, top: el.offsetTop }\n</code></pre>\n</li>\n<li>\n<p>Offset</p>\n<p>获得匹配元素相对文档的偏移</p>\n<pre><code class=\"language-js\">// jQuery\n$el.offset();\n\n// Native\nfunction getOffset (el) {\n  const box = el.getBoundingClientRect();\n\n  return {\n    top: box.top + window.pageYOffset - document.documentElement.clientTop,\n    left: box.left + window.pageXOffset - document.documentElement.clientLeft\n  }\n}\n</code></pre>\n</li>\n</ul>\n</li>\n<li>\n<p><a data-target=\"_blank\"  referrerpolicy=\"no-referrer\" href=\"#2.4\">2.4</a> <a data-target=\"_blank\"  referrerpolicy=\"no-referrer\" name='2.4'></a> Scroll Top</p>\n<p>获取元素滚动条垂直位置。</p>\n<pre><code class=\"language-js\">// jQuery\n$(window).scrollTop();\n\n// Native\n(document.documentElement &amp;&amp; document.documentElement.scrollTop) || document.body.scrollTop;\n</code></pre>\n</li>\n</ul>\n<p><strong><a data-target=\"_blank\"  referrerpolicy=\"no-referrer\" href=\"#%E7%9B%AE%E5%BD%95\">⬆ 回到顶部</a></strong></p>\n<h2>DOM Manipulation</h2>\n<ul>\n<li>\n<p><a data-target=\"_blank\"  referrerpolicy=\"no-referrer\" href=\"#3.1\">3.1</a> <a data-target=\"_blank\"  referrerpolicy=\"no-referrer\" name='3.1'></a> Remove</p>\n<p>从 DOM 中移除元素。</p>\n<pre><code class=\"language-js\">// jQuery\n$el.remove();\n\n// Native\nel.parentNode.removeChild(el);\n</code></pre>\n</li>\n<li>\n<p><a data-target=\"_blank\"  referrerpolicy=\"no-referrer\" href=\"#3.2\">3.2</a> <a data-target=\"_blank\"  referrerpolicy=\"no-referrer\" name='3.2'></a> Text</p>\n<ul>\n<li>\n<p>Get text</p>\n<p>返回指定元素及其后代的文本内容。</p>\n<pre><code class=\"language-js\">// jQuery\n$el.text();\n\n// Native\nel.textContent;\n</code></pre>\n</li>\n<li>\n<p>Set text</p>\n<p>设置元素的文本内容。</p>\n<pre><code class=\"language-js\">// jQuery\n$el.text(string);\n\n// Native\nel.textContent = string;\n</code></pre>\n</li>\n</ul>\n</li>\n<li>\n<p><a data-target=\"_blank\"  referrerpolicy=\"no-referrer\" href=\"#3.3\">3.3</a> <a data-target=\"_blank\"  referrerpolicy=\"no-referrer\" name='3.3'></a> HTML</p>\n<ul>\n<li>\n<p>Get HTML</p>\n<pre><code class=\"language-js\">// jQuery\n$el.html();\n\n// Native\nel.innerHTML;\n</code></pre>\n</li>\n<li>\n<p>Set HTML</p>\n<pre><code class=\"language-js\">// jQuery\n$el.html(htmlString);\n\n// Native\nel.innerHTML = htmlString;\n</code></pre>\n</li>\n</ul>\n</li>\n<li>\n<p><a data-target=\"_blank\"  referrerpolicy=\"no-referrer\" href=\"#3.4\">3.4</a> <a data-target=\"_blank\"  referrerpolicy=\"no-referrer\" name='3.4'></a> Append</p>\n<p>Append 插入到子节点的末尾</p>\n<pre><code class=\"language-js\">// jQuery\n$el.append(&quot;&lt;div id='container'&gt;hello&lt;/div&gt;&quot;);\n\n// Native (HTML string)\nel.insertAdjacentHTML('beforeend', '&lt;div id=&quot;container&quot;&gt;Hello World&lt;/div&gt;');\n\n// Native (Element)\nel.appendChild(newEl);\n</code></pre>\n</li>\n<li>\n<p><a data-target=\"_blank\"  referrerpolicy=\"no-referrer\" href=\"#3.5\">3.5</a> <a data-target=\"_blank\"  referrerpolicy=\"no-referrer\" name='3.5'></a> Prepend</p>\n<pre><code class=\"language-js\">// jQuery\n$el.prepend(&quot;&lt;div id='container'&gt;hello&lt;/div&gt;&quot;);\n\n// Native (HTML string)\nel.insertAdjacentHTML('afterbegin', '&lt;div id=&quot;container&quot;&gt;Hello World&lt;/div&gt;');\n\n// Native (Element)\nel.insertBefore(newEl, el.firstChild);\n</code></pre>\n</li>\n<li>\n<p><a data-target=\"_blank\"  referrerpolicy=\"no-referrer\" href=\"#3.6\">3.6</a> <a data-target=\"_blank\"  referrerpolicy=\"no-referrer\" name='3.6'></a> insertBefore</p>\n<p>在选中元素前插入新节点</p>\n<pre><code class=\"language-js\">// jQuery\n$newEl.insertBefore(queryString);\n\n// Native (HTML string)\nel.insertAdjacentHTML('beforebegin ', '&lt;div id=&quot;container&quot;&gt;Hello World&lt;/div&gt;');\n\n// Native (Element)\nconst el = document.querySelector(selector);\nif (el.parentNode) {\n  el.parentNode.insertBefore(newEl, el);\n}\n</code></pre>\n</li>\n<li>\n<p><a data-target=\"_blank\"  referrerpolicy=\"no-referrer\" href=\"#3.7\">3.7</a> <a data-target=\"_blank\"  referrerpolicy=\"no-referrer\" name='3.7'></a> insertAfter</p>\n<p>在选中元素后插入新节点</p>\n<pre><code class=\"language-js\">// jQuery\n$newEl.insertAfter(queryString);\n\n// Native (HTML string)\nel.insertAdjacentHTML('afterend', '&lt;div id=&quot;container&quot;&gt;Hello World&lt;/div&gt;');\n\n// Native (Element)\nconst el = document.querySelector(selector);\nif (el.parentNode) {\n  el.parentNode.insertBefore(newEl, el.nextSibling);\n}\n</code></pre>\n</li>\n<li>\n<p><a data-target=\"_blank\"  referrerpolicy=\"no-referrer\" href=\"#3.8\">3.8</a> <a data-target=\"_blank\"  referrerpolicy=\"no-referrer\" name='3.8'></a> is</p>\n<p>如果匹配给定的选择器，返回true</p>\n<pre><code class=\"language-js\">// jQuery\n$el.is(selector);\n\n// Native\nel.matches(selector);\n</code></pre>\n</li>\n<li>\n<p><a data-target=\"_blank\"  referrerpolicy=\"no-referrer\" href=\"#3.9\">3.9</a> <a data-target=\"_blank\"  referrerpolicy=\"no-referrer\" name='3.9'></a> clone</p>\n<p>深拷贝被选元素。（生成被选元素的副本，包含子节点、文本和属性。）</p>\n<pre><code class=\"language-js\">//jQuery\n$el.clone();\n\n//Native\nel.cloneNode();\n\n//深拷贝添加参数‘true’\n</code></pre>\n</li>\n<li>\n<p><a data-target=\"_blank\"  referrerpolicy=\"no-referrer\" href=\"#3.10\">3.10</a> <a data-target=\"_blank\"  referrerpolicy=\"no-referrer\" name='3.10'></a> empty</p>\n<p>移除所有子节点</p>\n</li>\n</ul>\n<pre><code class=\"language-js\">//jQuery\n$el.empty();\n\n//Native\nel.innerHTML = '';\n</code></pre>\n<ul>\n<li><a data-target=\"_blank\"  referrerpolicy=\"no-referrer\" href=\"#3.11\">3.11</a> <a data-target=\"_blank\"  referrerpolicy=\"no-referrer\" name='3.11'></a> wrap</li>\n</ul>\n<p>把每个被选元素放置在指定的HTML结构中。</p>\n<pre><code class=\"language-js\">//jQuery\n$(&quot;.inner&quot;).wrap('&lt;div&gt;&lt;/div&gt;');\n\n//Native\nArray.prototype.forEach.call(document.querySelector('.inner'), (el) =&gt; {\n   const wrapper = document.createElement('div');\n   wrapper.className = 'wrapper';\n   el.parentNode.insertBefore(wrapper, el);\n   el.parentNode.removeChild(el);\n   wrapper.appendChild(el);\n});\n\n</code></pre>\n<ul>\n<li>\n<p><a data-target=\"_blank\"  referrerpolicy=\"no-referrer\" href=\"#3.12\">3.12</a> <a data-target=\"_blank\"  referrerpolicy=\"no-referrer\" name=\"3.12\"></a> unwrap</p>\n<p>移除被选元素的父元素的DOM结构</p>\n<pre><code class=\"language-js\">// jQuery\n$('.inner').unwrap();\n\n// Native\nArray.prototype.forEach.call(document.querySelectorAll('.inner'), (el) =&gt; {\n      let elParentNode = el.parentNode\n\n      if(elParentNode !== document.body) {\n          elParentNode.parentNode.insertBefore(el, elParentNode)\n          elParentNode.parentNode.removeChild(elParentNode)\n      }\n});\n</code></pre>\n</li>\n<li>\n<p><a data-target=\"_blank\"  referrerpolicy=\"no-referrer\" href=\"#3.13\">3.13</a> <a data-target=\"_blank\"  referrerpolicy=\"no-referrer\" name=\"3.13\"></a> replaceWith</p>\n<p>用指定的元素替换被选的元素</p>\n<pre><code class=\"language-js\">//jQuery\n$('.inner').replaceWith('&lt;div&gt;&lt;/div&gt;');\n\n//Native\nArray.prototype.forEach.call(document.querySelectorAll('.inner'),(el) =&gt; {\n  const outer = document.createElement(&quot;div&quot;);\n  outer.className = &quot;outer&quot;;\n  el.parentNode.insertBefore(outer, el);\n  el.parentNode.removeChild(el);\n});\n</code></pre>\n</li>\n<li>\n<p><a data-target=\"_blank\"  referrerpolicy=\"no-referrer\" href=\"#3.14\">3.14</a> <a data-target=\"_blank\"  referrerpolicy=\"no-referrer\" name='3.14'></a> simple parse</p>\n<p>解析 HTML/SVG/XML 字符串</p>\n<pre><code class=\"language-js\">// jQuery\n$(`&lt;ol&gt;\n  &lt;li&gt;a&lt;/li&gt;\n  &lt;li&gt;b&lt;/li&gt;\n&lt;/ol&gt;\n&lt;ol&gt;\n  &lt;li&gt;c&lt;/li&gt;\n  &lt;li&gt;d&lt;/li&gt;\n&lt;/ol&gt;`);\n\n// Native\nrange = document.createRange();\nparse = range.createContextualFragment.bind(range);\n\nparse(`&lt;ol&gt;\n  &lt;li&gt;a&lt;/li&gt;\n  &lt;li&gt;b&lt;/li&gt;\n&lt;/ol&gt;\n&lt;ol&gt;\n  &lt;li&gt;c&lt;/li&gt;\n  &lt;li&gt;d&lt;/li&gt;\n&lt;/ol&gt;`);\n</code></pre>\n</li>\n</ul>\n<p><strong><a data-target=\"_blank\"  referrerpolicy=\"no-referrer\" href=\"#%E7%9B%AE%E5%BD%95\">⬆ 回到顶部</a></strong></p>\n<h2>Ajax</h2>\n<p><a data-target=\"_blank\"  referrerpolicy=\"no-referrer\" href=\"https://fetch.spec.whatwg.org/\">Fetch API</a> 是用于替换 XMLHttpRequest 处理 ajax 的新标准，Chrome 和 Firefox 均支持，旧浏览器可以使用 polyfills 提供支持。</p>\n<p>IE9+ 请使用 <a data-target=\"_blank\"  referrerpolicy=\"no-referrer\" href=\"http://github.com/github/fetch\">github/fetch</a>，IE8+ 请使用 <a data-target=\"_blank\"  referrerpolicy=\"no-referrer\" href=\"https://github.com/camsong/fetch-ie8/\">fetch-ie8</a>，JSONP 请使用 <a data-target=\"_blank\"  referrerpolicy=\"no-referrer\" href=\"https://github.com/camsong/fetch-jsonp\">fetch-jsonp</a>。</p>\n<ul>\n<li>\n<p><a data-target=\"_blank\"  referrerpolicy=\"no-referrer\" href=\"#4.1\">4.1</a> <a data-target=\"_blank\"  referrerpolicy=\"no-referrer\" name='4.1'></a> 从服务器读取数据并替换匹配元素的内容。</p>\n<pre><code class=\"language-js\">// jQuery\n$(selector).load(url, completeCallback)\n\n// Native\nfetch(url).then(data =&gt; data.text()).then(data =&gt; {\n  document.querySelector(selector).innerHTML = data\n}).then(completeCallback)\n</code></pre>\n</li>\n</ul>\n<p><strong><a data-target=\"_blank\"  referrerpolicy=\"no-referrer\" href=\"#%E7%9B%AE%E5%BD%95\">⬆ 回到顶部</a></strong></p>\n<h2>Events</h2>\n<p>完整地替代命名空间和事件代理，链接到 <a data-target=\"_blank\"  referrerpolicy=\"no-referrer\" href=\"https://github.com/oneuijs/oui-dom-events\">https://github.com/oneuijs/oui-dom-events</a></p>\n<ul>\n<li>\n<p><a data-target=\"_blank\"  referrerpolicy=\"no-referrer\" href=\"#5.0\">5.0</a> <a data-target=\"_blank\"  referrerpolicy=\"no-referrer\" name='5.0'></a> Document ready by <code>DOMContentLoaded</code></p>\n<pre><code class=\"language-js\">// jQuery\n$(document).ready(eventHandler);\n\n// Native\n// 检测 DOMContentLoaded 是否已完成\nif (document.readyState !== 'loading') {\n  eventHandler();\n} else {\n  document.addEventListener('DOMContentLoaded', eventHandler);\n}\n</code></pre>\n</li>\n<li>\n<p><a data-target=\"_blank\"  referrerpolicy=\"no-referrer\" href=\"#5.1\">5.1</a> <a data-target=\"_blank\"  referrerpolicy=\"no-referrer\" name='5.1'></a> 使用 on 绑定事件</p>\n<pre><code class=\"language-js\">// jQuery\n$el.on(eventName, eventHandler);\n\n// Native\nel.addEventListener(eventName, eventHandler);\n</code></pre>\n</li>\n<li>\n<p><a data-target=\"_blank\"  referrerpolicy=\"no-referrer\" href=\"#5.2\">5.2</a> <a data-target=\"_blank\"  referrerpolicy=\"no-referrer\" name='5.2'></a> 使用 off 解绑事件</p>\n<pre><code class=\"language-js\">// jQuery\n$el.off(eventName, eventHandler);\n\n// Native\nel.removeEventListener(eventName, eventHandler);\n</code></pre>\n</li>\n<li>\n<p><a data-target=\"_blank\"  referrerpolicy=\"no-referrer\" href=\"#5.3\">5.3</a> <a data-target=\"_blank\"  referrerpolicy=\"no-referrer\" name='5.3'></a> Trigger</p>\n<pre><code class=\"language-js\">// jQuery\n$(el).trigger('custom-event', {key1: 'data'});\n\n// Native\nif (window.CustomEvent) {\n  const event = new CustomEvent('custom-event', {detail: {key1: 'data'}});\n} else {\n  const event = document.createEvent('CustomEvent');\n  event.initCustomEvent('custom-event', true, true, {key1: 'data'});\n}\n\nel.dispatchEvent(event);\n</code></pre>\n</li>\n</ul>\n<p><strong><a data-target=\"_blank\"  referrerpolicy=\"no-referrer\" href=\"#%E7%9B%AE%E5%BD%95\">⬆ 回到顶部</a></strong></p>\n<h2>Utilities</h2>\n<p>大部分实用工具都能在 native API 中找到. 其他高级功能可以选用专注于该领域的稳定性和性能都更好的库来代替，推荐 <a data-target=\"_blank\"  referrerpolicy=\"no-referrer\" href=\"https://lodash.com\">lodash</a>。</p>\n<ul>\n<li>\n<p><a data-target=\"_blank\"  referrerpolicy=\"no-referrer\" href=\"#6.1\">6.1</a> <a data-target=\"_blank\"  referrerpolicy=\"no-referrer\" name='6.1'></a> 基本工具</p>\n<ul>\n<li>isArray</li>\n</ul>\n<p>检测参数是不是数组。</p>\n<pre><code class=\"language-js\">// jQuery\n$.isArray(range);\n\n// Native\nArray.isArray(range);\n</code></pre>\n<ul>\n<li>isWindow</li>\n</ul>\n<p>检测参数是不是 window。</p>\n<pre><code class=\"language-js\">// jQuery\n$.isWindow(obj);\n\n// Native\nfunction isWindow(obj) {\n  return obj !== null &amp;&amp; obj !== undefined &amp;&amp; obj === obj.window;\n}\n</code></pre>\n<ul>\n<li>inArray</li>\n</ul>\n<p>在数组中搜索指定值并返回索引 (找不到则返回 -1)。</p>\n<pre><code class=\"language-js\">// jQuery\n$.inArray(item, array);\n\n// Native\narray.indexOf(item) &gt; -1;\n\n// ES6-way\narray.includes(item);\n</code></pre>\n<ul>\n<li>isNumeric</li>\n</ul>\n<p>检测传入的参数是不是数字。<br>\nUse <code>typeof</code> to decide the type or the <code>type</code> example for better accuracy.</p>\n<pre><code class=\"language-js\">// jQuery\n$.isNumeric(item);\n\n// Native\nfunction isNumeric(n) {\n  return !isNaN(parseFloat(n)) &amp;&amp; isFinite(n);\n}\n</code></pre>\n<ul>\n<li>isFunction</li>\n</ul>\n<p>检测传入的参数是不是 JavaScript 函数对象。</p>\n<pre><code class=\"language-js\">// jQuery\n$.isFunction(item);\n\n// Native\nfunction isFunction(item) {\n  if (typeof item === 'function') {\n    return true;\n  }\n  var type = Object.prototype.toString(item);\n  return type === '[object Function]' || type === '[object GeneratorFunction]';\n}\n</code></pre>\n<ul>\n<li>isEmptyObject</li>\n</ul>\n<p>检测对象是否为空 (包括不可枚举属性).</p>\n<pre><code class=\"language-js\">// jQuery\n$.isEmptyObject(obj);\n\n// Native\nfunction isEmptyObject(obj) {\n  return Object.keys(obj).length === 0;\n}\n</code></pre>\n<ul>\n<li>isPlainObject</li>\n</ul>\n<p>检测是不是扁平对象 (使用 “{}” 或 “new Object” 创建).</p>\n<pre><code class=\"language-js\">// jQuery\n$.isPlainObject(obj);\n\n// Native\nfunction isPlainObject(obj) {\n  if (typeof (obj) !== 'object' || obj.nodeType || obj !== null &amp;&amp; obj !== undefined &amp;&amp; obj === obj.window) {\n    return false;\n  }\n\n  if (obj.constructor &amp;&amp;\n      !Object.prototype.hasOwnProperty.call(obj.constructor.prototype, 'isPrototypeOf')) {\n    return false;\n  }\n\n  return true;\n}\n</code></pre>\n<ul>\n<li>extend</li>\n</ul>\n<p>合并多个对象的内容到第一个对象。<br>\nobject.assign 是 ES6 API，也可以使用 <a data-target=\"_blank\"  referrerpolicy=\"no-referrer\" href=\"https://github.com/ljharb/object.assign\">polyfill</a>。</p>\n<pre><code class=\"language-js\">// jQuery\n$.extend({}, defaultOpts, opts);\n\n// Native\nObject.assign({}, defaultOpts, opts);\n</code></pre>\n<ul>\n<li>trim</li>\n</ul>\n<p>移除字符串头尾空白。</p>\n<pre><code class=\"language-js\">// jQuery\n$.trim(string);\n\n// Native\nstring.trim();\n</code></pre>\n<ul>\n<li>map</li>\n</ul>\n<p>将数组或对象转化为包含新内容的数组。</p>\n<pre><code class=\"language-js\">// jQuery\n$.map(array, (value, index) =&gt; {\n});\n\n// Native\narray.map((value, index) =&gt; {\n});\n</code></pre>\n<ul>\n<li>each</li>\n</ul>\n<p>轮询函数，可用于平滑的轮询对象和数组。</p>\n<pre><code class=\"language-js\">// jQuery\n$.each(array, (index, value) =&gt; {\n});\n\n// Native\narray.forEach((value, index) =&gt; {\n});\n</code></pre>\n<ul>\n<li>grep</li>\n</ul>\n<p>找到数组中符合过滤函数的元素。</p>\n<pre><code class=\"language-js\">// jQuery\n$.grep(array, (value, index) =&gt; {\n});\n\n// Native\narray.filter((value, index) =&gt; {\n});\n</code></pre>\n<ul>\n<li>type</li>\n</ul>\n<p>检测对象的 JavaScript [Class] 内部类型。</p>\n<pre><code class=\"language-js\">// jQuery\n$.type(obj);\n\n// Native\nfunction type(item) {\n  const reTypeOf = /(?:^\\[object\\s(.*?)\\]$)/;\n  return Object.prototype.toString.call(item)\n    .replace(reTypeOf, '$1')\n    .toLowerCase();\n}\n</code></pre>\n<ul>\n<li>merge</li>\n</ul>\n<p>合并第二个数组内容到第一个数组。</p>\n<pre><code class=\"language-js\">// jQuery\n$.merge(array1, array2);\n\n// Native\n// 使用 concat，不能去除重复值\nfunction merge(...args) {\n  return [].concat(...args)\n}\n\n// ES6，同样不能去除重复值\narray1 = [...array1, ...array2]\n\n// 使用 Set，可以去除重复值\nfunction merge(...args) {\n  return Array.from(new Set([].concat(...args)))\n}\n</code></pre>\n<ul>\n<li>now</li>\n</ul>\n<p>返回当前时间的数字呈现。</p>\n<pre><code class=\"language-js\">// jQuery\n$.now();\n\n// Native\nDate.now();\n</code></pre>\n<ul>\n<li>proxy</li>\n</ul>\n<p>传入函数并返回一个新函数，该函数绑定指定上下文。</p>\n<pre><code class=\"language-js\">// jQuery\n$.proxy(fn, context);\n\n// Native\nfn.bind(context);\n</code></pre>\n<ul>\n<li>makeArray</li>\n</ul>\n<p>类数组对象转化为真正的 JavaScript 数组。</p>\n<pre><code class=\"language-js\">// jQuery\n$.makeArray(arrayLike);\n\n// Native\nArray.prototype.slice.call(arrayLike);\n\n// ES6-way\nArray.from(arrayLike);\n</code></pre>\n</li>\n<li>\n<p><a data-target=\"_blank\"  referrerpolicy=\"no-referrer\" href=\"#6.2\">6.2</a> <a data-target=\"_blank\"  referrerpolicy=\"no-referrer\" name='6.2'></a> 包含</p>\n<p>检测 DOM 元素是不是其他 DOM 元素的后代.</p>\n<pre><code class=\"language-js\">// jQuery\n$.contains(el, child);\n\n// Native\nel !== child &amp;&amp; el.contains(child);\n</code></pre>\n</li>\n<li>\n<p><a data-target=\"_blank\"  referrerpolicy=\"no-referrer\" href=\"#6.3\">6.3</a> <a data-target=\"_blank\"  referrerpolicy=\"no-referrer\" name='6.3'></a> Globaleval</p>\n<p>全局执行 JavaScript 代码。</p>\n<pre><code class=\"language-js\">// jQuery\n$.globaleval(code);\n\n// Native\nfunction Globaleval(code) {\n  const script = document.createElement('script');\n  script.text = code;\n\n  document.head.appendChild(script).parentNode.removeChild(script);\n}\n\n// Use eval, but context of eval is current, context of $.Globaleval is global.\neval(code);\n</code></pre>\n</li>\n<li>\n<p><a data-target=\"_blank\"  referrerpolicy=\"no-referrer\" href=\"#6.4\">6.4</a> <a data-target=\"_blank\"  referrerpolicy=\"no-referrer\" name='6.4'></a> 解析</p>\n<ul>\n<li>parseHTML</li>\n</ul>\n<p>解析字符串为 DOM 节点数组.</p>\n<pre><code class=\"language-js\">// jQuery\n$.parseHTML(htmlString);\n\n// Native\nfunction parseHTML(string) {\n  const context = document.implementation.createHTMLDocument();\n\n  // Set the base href for the created document so any parsed elements with URLs\n  // are based on the document's URL\n  const base = context.createElement('base');\n  base.href = document.location.href;\n  context.head.appendChild(base);\n\n  context.body.innerHTML = string;\n  return context.body.children;\n}\n</code></pre>\n<ul>\n<li>parseJSON</li>\n</ul>\n<p>传入格式正确的 JSON 字符串并返回 JavaScript 值.</p>\n<pre><code class=\"language-js\">// jQuery\n$.parseJSON(str);\n\n// Native\nJSON.parse(str);\n</code></pre>\n</li>\n</ul>\n<p><strong><a data-target=\"_blank\"  referrerpolicy=\"no-referrer\" href=\"#%E7%9B%AE%E5%BD%95\">⬆ 回到顶部</a></strong></p>\n<h2>Promises</h2>\n<p>Promise 代表异步操作的最终结果。jQuery 用它自己的方式处理 promises，原生 JavaScript 遵循 <a data-target=\"_blank\"  referrerpolicy=\"no-referrer\" href=\"http://promises-aplus.github.io/promises-spec/\">Promises/A+</a> 标准实现了最小 API 来处理 promises。</p>\n<ul>\n<li>\n<p><a data-target=\"_blank\"  referrerpolicy=\"no-referrer\" href=\"#7.1\">7.1</a> <a data-target=\"_blank\"  referrerpolicy=\"no-referrer\" name='7.1'></a> done, fail, always</p>\n<p><code>done</code> 会在 promise 解决时调用，<code>fail</code> 会在 promise 拒绝时调用，<code>always</code> 总会调用。</p>\n<pre><code class=\"language-js\">// jQuery\n$promise.done(doneCallback).fail(failCallback).always(alwaysCallback)\n\n// Native\npromise.then(doneCallback, failCallback).then(alwaysCallback, alwaysCallback)\n</code></pre>\n</li>\n<li>\n<p><a data-target=\"_blank\"  referrerpolicy=\"no-referrer\" href=\"#7.2\">7.2</a> <a data-target=\"_blank\"  referrerpolicy=\"no-referrer\" name='7.2'></a> when</p>\n<p><code>when</code> 用于处理多个 promises。当全部 promises 被解决时返回，当任一 promise 被拒绝时拒绝。</p>\n<pre><code class=\"language-js\">// jQuery\n$.when($promise1, $promise2).done((promise1Result, promise2Result) =&gt; {\n});\n\n// Native\nPromise.all([$promise1, $promise2]).then([promise1Result, promise2Result] =&gt; {});\n</code></pre>\n</li>\n<li>\n<p><a data-target=\"_blank\"  referrerpolicy=\"no-referrer\" href=\"#7.3\">7.3</a> <a data-target=\"_blank\"  referrerpolicy=\"no-referrer\" name='7.3'></a> Deferred</p>\n<p>Deferred 是创建 promises 的一种方式。</p>\n<pre><code class=\"language-js\">// jQuery\nfunction asyncFunc() {\n  const defer = new $.Deferred();\n  setTimeout(() =&gt; {\n    if(true) {\n      defer.resolve('some_value_computed_asynchronously');\n    } else {\n      defer.reject('failed');\n    }\n  }, 1000);\n\n  return defer.promise();\n}\n\n// Native\nfunction asyncFunc() {\n  return new Promise((resolve, reject) =&gt; {\n    setTimeout(() =&gt; {\n      if (true) {\n        resolve('some_value_computed_asynchronously');\n      } else {\n        reject('failed');\n      }\n    }, 1000);\n  });\n}\n\n// Deferred way\nfunction defer() {\n  const deferred = {};\n  const promise = new Promise((resolve, reject) =&gt; {\n    deferred.resolve = resolve;\n    deferred.reject = reject;\n  });\n\n  deferred.promise = () =&gt; {\n    return promise;\n  };\n\n  return deferred;\n}\n\nfunction asyncFunc() {\n  const defer = defer();\n  setTimeout(() =&gt; {\n    if(true) {\n      defer.resolve('some_value_computed_asynchronously');\n    } else {\n      defer.reject('failed');\n    }\n  }, 1000);\n\n  return defer.promise();\n}\n</code></pre>\n</li>\n</ul>\n<p><strong><a data-target=\"_blank\"  referrerpolicy=\"no-referrer\" href=\"#%E7%9B%AE%E5%BD%95\">⬆ 回到顶部</a></strong></p>\n<h2>Animation</h2>\n<ul>\n<li>\n<p><a data-target=\"_blank\"  referrerpolicy=\"no-referrer\" href=\"#8.1\">8.1</a> <a data-target=\"_blank\"  referrerpolicy=\"no-referrer\" name='8.1'></a> Show &amp; Hide</p>\n<pre><code class=\"language-js\">// jQuery\n$el.show();\n$el.hide();\n\n// Native\n// 更多 show 方法的细节详见 https://github.com/oneuijs/oui-dom-utils/blob/master/src/index.js#L363\nel.style.display = ''|'inline'|'inline-block'|'inline-table'|'block';\nel.style.display = 'none';\n</code></pre>\n</li>\n<li>\n<p><a data-target=\"_blank\"  referrerpolicy=\"no-referrer\" href=\"#8.2\">8.2</a> <a data-target=\"_blank\"  referrerpolicy=\"no-referrer\" name='8.2'></a> Toggle</p>\n<p>显示或隐藏元素。</p>\n<pre><code class=\"language-js\">// jQuery\n$el.toggle();\n\n// Native\nif (el.ownerDocument.defaultView.getComputedStyle(el, null).display === 'none') {\n  el.style.display = ''|'inline'|'inline-block'|'inline-table'|'block';\n} else {\n  el.style.display = 'none';\n}\n</code></pre>\n</li>\n<li>\n<p><a data-target=\"_blank\"  referrerpolicy=\"no-referrer\" href=\"#8.3\">8.3</a> <a data-target=\"_blank\"  referrerpolicy=\"no-referrer\" name='8.3'></a> FadeIn &amp; FadeOut</p>\n<pre><code class=\"language-js\">// jQuery\n$el.fadeIn(3000);\n$el.fadeOut(3000);\n\n// Native\nel.style.transition = 'opacity 3s';\n// fadeIn\nel.style.opacity = '1';\n// fadeOut\nel.style.opacity = '0';\n</code></pre>\n</li>\n<li>\n<p><a data-target=\"_blank\"  referrerpolicy=\"no-referrer\" href=\"#8.4\">8.4</a> <a data-target=\"_blank\"  referrerpolicy=\"no-referrer\" name='8.4'></a> FadeTo</p>\n<p>调整元素透明度。</p>\n<pre><code class=\"language-js\">// jQuery\n$el.fadeTo('slow',0.15);\n// Native\nel.style.transition = 'opacity 3s'; // 假设 'slow' 等于 3 秒\nel.style.opacity = '0.15';\n</code></pre>\n</li>\n<li>\n<p><a data-target=\"_blank\"  referrerpolicy=\"no-referrer\" href=\"#8.5\">8.5</a> <a data-target=\"_blank\"  referrerpolicy=\"no-referrer\" name='8.5'></a> FadeToggle</p>\n<p>动画调整透明度用来显示或隐藏。</p>\n<pre><code class=\"language-js\">// jQuery\n$el.fadeToggle();\n\n// Native\nel.style.transition = 'opacity 3s';\nconst { opacity } = el.ownerDocument.defaultView.getComputedStyle(el, null);\nif (opacity === '1') {\n  el.style.opacity = '0';\n} else {\n  el.style.opacity = '1';\n}\n</code></pre>\n</li>\n<li>\n<p><a data-target=\"_blank\"  referrerpolicy=\"no-referrer\" href=\"#8.6\">8.6</a> <a data-target=\"_blank\"  referrerpolicy=\"no-referrer\" name='8.6'></a> SlideUp &amp; SlideDown</p>\n<pre><code class=\"language-js\">// jQuery\n$el.slideUp();\n$el.slideDown();\n\n// Native\nconst originHeight = '100px';\nel.style.transition = 'height 3s';\n// slideUp\nel.style.height = '0px';\n// slideDown\nel.style.height = originHeight;\n</code></pre>\n</li>\n<li>\n<p><a data-target=\"_blank\"  referrerpolicy=\"no-referrer\" href=\"#8.7\">8.7</a> <a data-target=\"_blank\"  referrerpolicy=\"no-referrer\" name='8.7'></a> SlideToggle</p>\n<p>滑动切换显示或隐藏。</p>\n<pre><code class=\"language-js\">// jQuery\n$el.slideToggle();\n\n// Native\nconst originHeight = '100px';\nel.style.transition = 'height 3s';\nconst { height } = el.ownerDocument.defaultView.getComputedStyle(el, null);\nif (parseInt(height, 10) === 0) {\n  el.style.height = originHeight;\n}\nelse {\n el.style.height = '0px';\n}\n</code></pre>\n</li>\n<li>\n<p><a data-target=\"_blank\"  referrerpolicy=\"no-referrer\" href=\"#8.8\">8.8</a> <a data-target=\"_blank\"  referrerpolicy=\"no-referrer\" name='8.8'></a> Animate</p>\n<p>执行一系列 CSS 属性动画。</p>\n<pre><code class=\"language-js\">// jQuery\n$el.animate({ params }, speed);\n\n// Native\nel.style.transition = 'all ' + speed;\nObject.keys(params).forEach((key) =&gt;\n  el.style[key] = params[key];\n)\n</code></pre>\n</li>\n</ul>\n<p><strong><a data-target=\"_blank\"  referrerpolicy=\"no-referrer\" href=\"#%E7%9B%AE%E5%BD%95\">⬆ 回到顶部</a></strong></p>\n<h2>Alternatives</h2>\n<ul>\n<li><a data-target=\"_blank\"  referrerpolicy=\"no-referrer\" href=\"http://youmightnotneedjquery.com/\">你可能不需要 jQuery (You Might Not Need jQuery)</a> - 如何使用原生 JavaScript 实现通用事件，元素，ajax 等用法。</li>\n<li><a data-target=\"_blank\"  referrerpolicy=\"no-referrer\" href=\"http://github.com/npm-dom\">npm-dom</a> 以及 <a data-target=\"_blank\"  referrerpolicy=\"no-referrer\" href=\"http://github.com/webmodules\">webmodules</a> - 在 NPM 上提供独立 DOM 模块的组织</li>\n</ul>\n<h2>Browser Support</h2>\n<table>\n<thead>\n<tr>\n<th><img src=\"/images/%E5%8E%9F%E7%94%9Fjs%E6%9B%BF%E6%8D%A2jQuery%E5%90%84%E7%A7%8D%E6%96%B9%E6%B3%95-%E4%B8%AD%E6%96%87%E7%89%88/chrome_48x48.png\" alt=\"image.png\"></th>\n<th><img src=\"/images/%E5%8E%9F%E7%94%9Fjs%E6%9B%BF%E6%8D%A2jQuery%E5%90%84%E7%A7%8D%E6%96%B9%E6%B3%95-%E4%B8%AD%E6%96%87%E7%89%88/firefox_48x48.png\" alt=\"image.png\"></th>\n<th><img src=\"/images/%E5%8E%9F%E7%94%9Fjs%E6%9B%BF%E6%8D%A2jQuery%E5%90%84%E7%A7%8D%E6%96%B9%E6%B3%95-%E4%B8%AD%E6%96%87%E7%89%88/internet-explorer_9-11_48x48.png\" alt=\"image.png\"></th>\n<th><img src=\"/images/%E5%8E%9F%E7%94%9Fjs%E6%9B%BF%E6%8D%A2jQuery%E5%90%84%E7%A7%8D%E6%96%B9%E6%B3%95-%E4%B8%AD%E6%96%87%E7%89%88/opera_48x48.png\" alt=\"image.png\"></th>\n<th><img src=\"/images/%E5%8E%9F%E7%94%9Fjs%E6%9B%BF%E6%8D%A2jQuery%E5%90%84%E7%A7%8D%E6%96%B9%E6%B3%95-%E4%B8%AD%E6%96%87%E7%89%88/safari_48x48.png\" alt=\"image.png\"></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Latest ✔</td>\n<td>Latest ✔</td>\n<td>10+ ✔</td>\n<td>Latest ✔</td>\n<td>6.1+ ✔</td>\n</tr>\n</tbody>\n</table>\n<h1>License</h1>\n<p>MIT</p>\n<h3>热门评论：</h3>\n<ul>\n<li><img src=\"%E5%8E%9F%E7%94%9Fjs%E6%9B%BF%E6%8D%A2jQuery%E5%90%84%E7%A7%8D%E6%96%B9%E6%B3%95-%E4%B8%AD%E6%96%87%E7%89%88/663067075-5ce6a162144fe_big64.png#avatarimg\" alt=\"卡门\"> <a data-target=\"_blank\"  referrerpolicy=\"no-referrer\" href=\"https://segmentfault.com/u/kamen_5b8cfcd6d4620\">卡门</a> 2018-10-6 3:43 回复:<p>好东西收藏了</p>\n</li>\n</ul>\n<hr>\n<ul>\n<li>\n<p><img src=\"%E5%8E%9F%E7%94%9Fjs%E6%9B%BF%E6%8D%A2jQuery%E5%90%84%E7%A7%8D%E6%96%B9%E6%B3%95-%E4%B8%AD%E6%96%87%E7%89%88/841852428-5704b3977ecef_big64.png#avatarimg\" alt=\"G_Koala_C\"> <a data-target=\"_blank\"  referrerpolicy=\"no-referrer\" href=\"https://segmentfault.com/u/koala_bear\">G_Koala_C</a> 2018-10-7 12:02 回复:</p>\n<p>总结的真好！</p>\n<ul>\n<li><img src=\"%E5%8E%9F%E7%94%9Fjs%E6%9B%BF%E6%8D%A2jQuery%E5%90%84%E7%A7%8D%E6%96%B9%E6%B3%95-%E4%B8%AD%E6%96%87%E7%89%88/3774603972-56e6a42c83ff8_big64.png#avatarimg\" alt=\"jsoncode\"> <a data-target=\"_blank\"  referrerpolicy=\"no-referrer\" href=\"https://segmentfault.com/u/jsoncode\">jsoncode</a> 2018-10-8 2:55 回复:G_Koala_C<br>\n不是我总结的，第一行是原链接</li>\n</ul>\n</li>\n</ul>\n<hr>\n<ul>\n<li>\n<p><img src=\"%E5%8E%9F%E7%94%9Fjs%E6%9B%BF%E6%8D%A2jQuery%E5%90%84%E7%A7%8D%E6%96%B9%E6%B3%95-%E4%B8%AD%E6%96%87%E7%89%88/1592113604-57a2a4d4d2e50_big64.png#avatarimg\" alt=\"hhxx999\"> <a data-target=\"_blank\"  referrerpolicy=\"no-referrer\" href=\"https://segmentfault.com/u/hhxx999\">hhxx999</a> 2018-10-10 7:58 回复:</p>\n<p>收藏了，对JQ的了解也是很有用的。看了下来，我还是用JQ吧。</p>\n<ul>\n<li><img src=\"%E5%8E%9F%E7%94%9Fjs%E6%9B%BF%E6%8D%A2jQuery%E5%90%84%E7%A7%8D%E6%96%B9%E6%B3%95-%E4%B8%AD%E6%96%87%E7%89%88/3774603972-56e6a42c83ff8_big64.png#avatarimg\" alt=\"jsoncode\"> <a data-target=\"_blank\"  referrerpolicy=\"no-referrer\" href=\"https://segmentfault.com/u/jsoncode\">jsoncode</a> 2018-10-10 9:33 回复:hhxx999<br>\n嗯，现在好多插件还无法完全脱离，不过自己的代码没用到任何jq方法，都是原生的，zepto都没用到</li>\n</ul>\n</li>\n</ul>\n<hr>\n<ul>\n<li><img src=\"%E5%8E%9F%E7%94%9Fjs%E6%9B%BF%E6%8D%A2jQuery%E5%90%84%E7%A7%8D%E6%96%B9%E6%B3%95-%E4%B8%AD%E6%96%87%E7%89%88/3626973766-5b56f071e67cd_big64.png#avatarimg\" alt=\"KattemChen\"> <a data-target=\"_blank\"  referrerpolicy=\"no-referrer\" href=\"https://segmentfault.com/u/kattemchen\">KattemChen</a> 2019-8-14 2:02 回复:<p>太强了吧，我的天。</p></li>\n</ul>\n</div>","title":"原生js替换jQuery各种方法-中文版","tags":"javascript","date":"2018-10-10 03:06:12","categories":""},"allData":[{"label":"前端","key":"前端","children":[{"label":"IDE","key":"前端IDE","children":[{"label":"vscode控制台输出中文乱码","key":"IDEvscode控制台输出中文乱码","data":{"date":"2021/8/19 10:24:10"}},{"label":"webpack编译遇到的问题_Error_Cannot_find_module_webpack-cli_bin_config-yargs_","key":"IDEwebpack编译遇到的问题_Error_Cannot_find_module_webpack-cli_bin_config-yargs_","data":{"date":"2021/8/2 9:08:07"}},{"label":"webstorm全局搜索搜不到内容","key":"IDEwebstorm全局搜索搜不到内容","data":{"date":"2021/5/5 4:47:19"}},{"label":"webStorm_clone一个新的项目（一个项目clone多分）","key":"IDEwebStorm_clone一个新的项目（一个项目clone多分）","data":{"date":"2020/12/8 1:25:00"}},{"label":"免费获取JetBrains全家桶正版License教程_","key":"IDE免费获取JetBrains全家桶正版License教程_","data":{"date":"2020/11/12 5:03:51"}},{"label":"webStorm_提交git时跳过eslint校验","key":"IDEwebStorm_提交git时跳过eslint校验","data":{"date":"2020/10/12 5:15:10"}},{"label":"webStorm中跳过本地变更更新远程代码","key":"IDEwebStorm中跳过本地变更更新远程代码","data":{"date":"2020/10/12 5:09:41"}},{"label":"webStorm找回误删文件和历史操作痕迹","key":"IDEwebStorm找回误删文件和历史操作痕迹","data":{"date":"2020/9/21 11:34:41"}},{"label":"sublime_text3_package_control_报错","key":"IDEsublime_text3_package_control_报错","data":{"date":"2018-05-26 04:33:58"}},{"label":"sublime_text_2学习(二)_创建可复用的代码片段","key":"IDEsublime_text_2学习(二)_创建可复用的代码片段","data":{"date":"2014/5/20 11:34:00"}}]},{"label":"css","key":"前端css","children":[{"label":"css3_实现一个k歌效果和一个进度条的效果","key":"csscss3_实现一个k歌效果和一个进度条的效果","data":{"date":"2021-11-08 10:34:54"}},{"label":"css强制换行_禁止换行_的几种写法","key":"csscss强制换行_禁止换行_的几种写法","data":{"date":"2020/9/29 10:03:43"}},{"label":"纯css3实现二维码扫描特效","key":"css纯css3实现二维码扫描特效","data":{"date":"2020-03-09 05:19:14"}},{"label":"svg_css3做一个动感的波浪效果","key":"csssvg_css3做一个动感的波浪效果","data":{"date":"2019-06-27 03:24:45"}},{"label":"css3实现信纸_同学录效果","key":"csscss3实现信纸_同学录效果","data":{"date":"2018-12-05 10:30:17"}},{"label":"html背景图不随滚轮滚动_而且按住Ctrl并滚动滚轮时_图片不会变大缩小_就像百度的首页一样","key":"csshtml背景图不随滚轮滚动_而且按住Ctrl并滚动滚轮时_图片不会变大缩小_就像百度的首页一样","data":{"date":"2018-10-24 03:12:19"}},{"label":"css3_实现圆角的三角形","key":"csscss3_实现圆角的三角形","data":{"date":"2018-05-04 07:13:45"}},{"label":"css3水滴效果_地图标记效果","key":"csscss3水滴效果_地图标记效果","data":{"date":"2018-01-05 03:20:23"}},{"label":"使用css3的radial-gradient实现一个穿透效果的圆","key":"css使用css3的radial-gradient实现一个穿透效果的圆","data":{"date":"2017-10-23 11:40:02"}},{"label":"css3_实现自定义有序列表序号","key":"csscss3_实现自定义有序列表序号","data":{"date":"2017-07-15 10:42:07"}},{"label":"css3漂亮的按钮","key":"csscss3漂亮的按钮","data":{"date":"2014/11/28 4:56:00"}},{"label":"css3_呼吸动画按钮","key":"csscss3_呼吸动画按钮","data":{"date":"2014/11/27 3:54:00"}},{"label":"css_选择器种类","key":"csscss_选择器种类","data":{"date":"2014/11/16 7:54:00"}},{"label":"如何在CSS文件里加入变量","key":"css如何在CSS文件里加入变量","data":{"date":"2014/5/22 8:46:00"}},{"label":"IE6_IE7_IE8的CSS_JS兼容","key":"cssIE6_IE7_IE8的CSS_JS兼容","data":{"date":"2014/5/20 11:13:00"}},{"label":"css背景图与html插入img的区别","key":"csscss背景图与html插入img的区别","data":{"date":"2014/5/9 11:05:00"}}]},{"label":"framework","key":"前端framework","children":[{"label":"Nextjs_Warning__A_title_element_received_an_array_with_more_than_1_element_as_children","key":"frameworkNextjs_Warning__A_title_element_received_an_array_with_more_than_1_element_as_children","data":{"date":"2023-01-19 21:56:46"}},{"label":"puppeteer安装失败解决方案","key":"frameworkpuppeteer安装失败解决方案","data":{"date":"2022-01-13 01:32:24"}},{"label":"useEffect中获取之前的值","key":"frameworkuseEffect中获取之前的值","data":{"date":"2022-01-05 11:10:34"}},{"label":"React中typescript文件引入图片报错问题","key":"frameworkReact中typescript文件引入图片报错问题","data":{"date":"2021-12-13 17:30:39"}},{"label":"vue_react_angular开发的页面_如何在控制台修改受控表单域的值","key":"frameworkvue_react_angular开发的页面_如何在控制台修改受控表单域的值","data":{"date":"2021/9/18 10:00:09"}},{"label":"ant_design中的Dropdown.Button如何使用幽灵按钮","key":"frameworkant_design中的Dropdown.Button如何使用幽灵按钮","data":{"date":"2021/6/24 11:50:30"}},{"label":"react项目报红色警告_UNSAFE_componentWillMount_in_strict_mode_is_not_recommended","key":"frameworkreact项目报红色警告_UNSAFE_componentWillMount_in_strict_mode_is_not_recommended","data":{"date":"2021/6/23 4:34:14"}},{"label":"react怎么在useEffect中使用async异步函数","key":"frameworkreact怎么在useEffect中使用async异步函数","data":{"date":"2021/5/25 6:40:24"}},{"label":"快速实现_react_多语言改造","key":"framework快速实现_react_多语言改造","data":{"date":"2021/5/19 2:56:43"}},{"label":"对React_Vue_Angular项目的页面模拟输入input_来实现自动输入功能","key":"framework对React_Vue_Angular项目的页面模拟输入input_来实现自动输入功能","data":{"date":"2020/12/17 9:23:37"}},{"label":"node_vue_react项目install_build时提示not_found_python2.x","key":"frameworknode_vue_react项目install_build时提示not_found_python2.x","data":{"date":"2020/12/7 2:34:45"}},{"label":"vue-cli_electron_开发桌面应用教程","key":"frameworkvue-cli_electron_开发桌面应用教程","data":{"date":"2020/11/12 10:14:59"}},{"label":"setState是异步方法","key":"frameworksetState是异步方法","data":{"date":"2020/10/10 4:42:44"}},{"label":"如何监听Ant_Design_of_React_的Search组件设置allowClear后的点击事件_","key":"framework如何监听Ant_Design_of_React_的Search组件设置allowClear后的点击事件_","data":{"date":"2020-09-27 10:40:01"}},{"label":"ant-design-vue按需引用组件","key":"frameworkant-design-vue按需引用组件","data":{"date":"2020/9/17 11:00:28"}},{"label":"常用链接","key":"framework常用链接","data":{"date":"2020/9/17 7:22:04"}},{"label":"ant-design-vue_1.5.1支持的所有语言列表","key":"frameworkant-design-vue_1.5.1支持的所有语言列表","data":{"date":"2020/9/17 4:31:48"}},{"label":"ant-design-vue_1.5.1组件完整列表","key":"frameworkant-design-vue_1.5.1组件完整列表","data":{"date":"2020/9/17 4:28:18"}},{"label":"ant多语言配置_moment多语言配置","key":"frameworkant多语言配置_moment多语言配置","data":{"date":"2020/9/17 4:22:05"}},{"label":"ant按需加载改版自动化脚本","key":"frameworkant按需加载改版自动化脚本","data":{"date":"2020/9/17 1:50:48"}},{"label":"vue实现一个6个输入框的验证码输入组件","key":"frameworkvue实现一个6个输入框的验证码输入组件","data":{"date":"2020-06-30 02:57:22"}},{"label":"element-ui_中form表单有且今有一个输入框时会执行form的submit","key":"frameworkelement-ui_中form表单有且今有一个输入框时会执行form的submit","data":{"date":"2020-06-29 04:55:57"}},{"label":"ant-design-vue_按需加载遇到坑-less报错","key":"frameworkant-design-vue_按需加载遇到坑-less报错","data":{"date":"2020-06-12 09:41:51"}},{"label":"element-ui的tabs页签页组件在使用vue-i18n切换语言后_按钮宽度发生变化之后定位不准确解决方案","key":"frameworkelement-ui的tabs页签页组件在使用vue-i18n切换语言后_按钮宽度发生变化之后定位不准确解决方案","data":{"date":"2020-05-15 01:25:09"}},{"label":"vue打包报错UnhandledPromiseRejectionWarning_CssSyntaxError_","key":"frameworkvue打包报错UnhandledPromiseRejectionWarning_CssSyntaxError_","data":{"date":"2020-03-11 12:08:46"}},{"label":"Material_Design_for_Bootstrap","key":"frameworkMaterial_Design_for_Bootstrap","data":{"date":"2017-12-14 06:20:46"}},{"label":"vue2_ref的用法_简单易懂——vue2子组件索引","key":"frameworkvue2_ref的用法_简单易懂——vue2子组件索引","data":{"date":"2017-04-13 02:27:06"}},{"label":"vuejs2遇到的一些坑","key":"frameworkvuejs2遇到的一些坑","data":{"date":"2017-03-03 04:51:12"}},{"label":"vuejs在chrome_extensions中不起作用","key":"frameworkvuejs在chrome_extensions中不起作用","data":{"date":"2016-11-19 03:10:53"}}]},{"label":"git","key":"前端git","children":[{"label":"同时配置多套sshkey授权不同的代码仓库","key":"git同时配置多套sshkey授权不同的代码仓库","data":{"date":"2021-12-14 22:16:54"}},{"label":"批量修改指定仓库的git_username_和git_useremail","key":"git批量修改指定仓库的git_username_和git_useremail","data":{"date":"2020/12/7 2:30:21"}},{"label":"git常用命令整理以及详解","key":"gitgit常用命令整理以及详解","data":{"date":"2017-06-19 04:20:37"}}]},{"label":"github","key":"前端github","children":[{"label":"github_action使用","key":"githubgithub_action使用","data":{"date":"2022-01-10 21:28:52"}},{"label":"github配置ssh_key_提交代码","key":"githubgithub配置ssh_key_提交代码","data":{"date":"2021/4/15 1:15:10"}}]},{"label":"html","key":"前端html","children":[{"label":"解决input_type=file_打开时慢_卡顿问题","key":"html解决input_type=file_打开时慢_卡顿问题","data":{"date":"2020/11/9 1:56:16"}},{"label":"html5_标签picture用法","key":"htmlhtml5_标签picture用法","data":{"date":"2017-12-09 12:47:15"}}]},{"label":"js","key":"前端js","children":[{"label":"javascript简单实现xml2json","key":"jsjavascript简单实现xml2json","data":{"date":"2022-01-04 16:56:12"}},{"label":"给自己的博客添加无刷新跳转","key":"js给自己的博客添加无刷新跳转","data":{"date":"2021-12-31 02:51:53"}},{"label":"原生js给dom包裹一层父标签","key":"js原生js给dom包裹一层父标签","data":{"date":"2021-12-30 23:45:16"}},{"label":"js读写剪切板(ES6方案和兼容方案)","key":"jsjs读写剪切板(ES6方案和兼容方案)","data":{"date":"2021/9/14 5:22:18"}},{"label":"js数字计算丢失精度问题解决方案","key":"jsjs数字计算丢失精度问题解决方案","data":{"date":"2021-08-31 05:38:53"}},{"label":"时间片段合并","key":"js时间片段合并","data":{"date":"2021/8/12 11:49:18"}},{"label":"canvas_生成海报","key":"jscanvas_生成海报","data":{"date":"2021/7/28 3:17:36"}},{"label":"canvas读取图片报错_Tainted_canvases_may_not_be_exported","key":"jscanvas读取图片报错_Tainted_canvases_may_not_be_exported","data":{"date":"2021/7/27 4:31:18"}},{"label":"网站追中技术-前端持久化-evercookie","key":"js网站追中技术-前端持久化-evercookie","data":{"date":"2021/6/2 12:46:18"}},{"label":"js_javascript_将中文数字转成阿拉伯数字","key":"jsjs_javascript_将中文数字转成阿拉伯数字","data":{"date":"2021/4/9 11:12:00"}},{"label":"如何使用防盗链的图片_","key":"js如何使用防盗链的图片_","data":{"date":"2021/2/26 10:33:18"}},{"label":"h5实现主播端推流","key":"jsh5实现主播端推流","data":{"date":"2021/2/7 2:30:33"}},{"label":"数组去重","key":"js数组去重","data":{"date":"2020/11/25 6:58:12"}},{"label":"网页中实现Ctrl_f搜索功能","key":"js网页中实现Ctrl_f搜索功能","data":{"date":"2020/9/28 1:15:33"}},{"label":"前端js监听浏览器网络变化","key":"js前端js监听浏览器网络变化","data":{"date":"2020-09-14 10:57:52"}},{"label":"解决qrcode_js生成二维码时必须定义一个空div的问题","key":"js解决qrcode_js生成二维码时必须定义一个空div的问题","data":{"date":"2020-07-09 08:32:36"}},{"label":"十行_js_获取带有双字节字符的字符串长度","key":"js十行_js_获取带有双字节字符的字符串长度","data":{"date":"2020-06-16 08:45:46"}},{"label":"给自己的网站接入谷歌翻译_以及修复了一个谷歌翻译的一个bug","key":"js给自己的网站接入谷歌翻译_以及修复了一个谷歌翻译的一个bug","data":{"date":"2019-12-13 12:34:02"}},{"label":"简体中文转繁体中文_并可区分港台繁体","key":"js简体中文转繁体中文_并可区分港台繁体","data":{"date":"2019-10-03 11:21:39"}},{"label":"简单高效实现一个按需加载图片的逻辑_","key":"js简单高效实现一个按需加载图片的逻辑_","data":{"date":"2019-08-02 02:54:20"}},{"label":"js_数组去重_单元素和对象数组_","key":"jsjs_数组去重_单元素和对象数组_","data":{"date":"2019-05-05 03:29:09"}},{"label":"js简单倒计时","key":"jsjs简单倒计时","data":{"date":"2018-12-12 10:15:21"}},{"label":"js_导出excel_elsx格式","key":"jsjs_导出excel_elsx格式","data":{"date":"2018-11-21 01:34:16"}},{"label":"前端黑科技-如何使用防盗链图片","key":"js前端黑科技-如何使用防盗链图片","data":{"date":"2018-11-05 07:12:46"}},{"label":"原生js替换jQuery各种方法-中文版","key":"js原生js替换jQuery各种方法-中文版","data":{"date":"2018-10-10 03:06:12"}},{"label":"原生javascript的一些好用的小技巧1","key":"js原生javascript的一些好用的小技巧1","data":{"date":"2018-09-26 10:28:01"}},{"label":"html5_indexeddb的简明api","key":"jshtml5_indexeddb的简明api","data":{"date":"2018-09-26 07:28:12"}},{"label":"js_对象深度拷贝","key":"jsjs_对象深度拷贝","data":{"date":"2018/9/12 10:48:00"}},{"label":"js通过CSV倒入excel数据","key":"jsjs通过CSV倒入excel数据","data":{"date":"2018-06-01 02:19:52"}},{"label":"fn有toString方法_string没有toFunction方法_自定义一个toFunction方法","key":"jsfn有toString方法_string没有toFunction方法_自定义一个toFunction方法","data":{"date":"2018-04-18 12:30:32"}},{"label":"js简单实现图片本地预览效果","key":"jsjs简单实现图片本地预览效果","data":{"date":"2018-04-09 05:47:16"}},{"label":"js实现文件切片上传_断点续传","key":"jsjs实现文件切片上传_断点续传","data":{"date":"2018-04-02 06:24:13"}},{"label":"正则中的_1的作用","key":"js正则中的_1的作用","data":{"date":"2017-12-28 01:40:22"}},{"label":"js正则断言整理","key":"jsjs正则断言整理","data":{"date":"2017-12-14 06:26:40"}},{"label":"js数组排序踩的一个坑","key":"jsjs数组排序踩的一个坑","data":{"date":"2017-12-12 02:46:32"}},{"label":"一个链接能打开win10设置界面","key":"js一个链接能打开win10设置界面","data":{"date":"2017-11-26 05:42:34"}},{"label":"js中的toFixed保留小数位的功能优化","key":"jsjs中的toFixed保留小数位的功能优化","data":{"date":"2017-11-14 10:59:00"}},{"label":"如何在页面引用外部的html","key":"js如何在页面引用外部的html","data":{"date":"2017-08-31 11:27:48"}},{"label":"ajax_与_post_的区别_以及_post的bug","key":"jsajax_与_post_的区别_以及_post的bug","data":{"date":"2017-06-15 04:00:09"}},{"label":"浏览器不支持播放flash_一个神奇的链接解决问题","key":"js浏览器不支持播放flash_一个神奇的链接解决问题","data":{"date":"2017-05-25 08:13:10"}},{"label":"js校验文件唯一性","key":"jsjs校验文件唯一性","data":{"date":"2017-05-17 11:02:25"}},{"label":"一个面试题_两个四位数_翻转数字后与原数4倍关系","key":"js一个面试题_两个四位数_翻转数字后与原数4倍关系","data":{"date":"2017-03-08 02:39:58"}},{"label":"使用chrome_remote_debug时打开inspect时出现一片空白","key":"js使用chrome_remote_debug时打开inspect时出现一片空白","data":{"date":"2016-12-13 02:53:58"}},{"label":"从jquery_zepto中提取的90行代码实现一个完整的ajax","key":"js从jquery_zepto中提取的90行代码实现一个完整的ajax","data":{"date":"2016-12-01 05:27:30"}},{"label":"chrome_监听touch类事件报错_无法被动侦听事件preventDefault","key":"jschrome_监听touch类事件报错_无法被动侦听事件preventDefault","data":{"date":"2016-11-28 12:16:34"}},{"label":"使用js对被转义的特殊符号_如_amp;nbsp;_进行反转义","key":"js使用js对被转义的特殊符号_如_amp;nbsp;_进行反转义","data":{"date":"2016-11-22 10:22:10"}},{"label":"正则匹配常见链接地址","key":"js正则匹配常见链接地址","data":{"date":"2016-10-13 07:31:36"}},{"label":"js_时间任意格式化_又来造轮子了","key":"jsjs_时间任意格式化_又来造轮子了","data":{"date":"2016-08-24 10:56:08"}},{"label":"js中文简体繁体切换","key":"jsjs中文简体繁体切换","data":{"date":"2016-08-10 06:08:26"}},{"label":"火狐浏览器竟然不支持body_scrollTop","key":"js火狐浏览器竟然不支持body_scrollTop","data":{"date":"2016-08-10 05:38:10"}},{"label":"js深度解析url地址","key":"jsjs深度解析url地址","data":{"date":"2016-08-09 02:30:31"}},{"label":"一个html标签到底包含了多少信息_1_","key":"js一个html标签到底包含了多少信息_1_","data":{"date":"2016-06-14 05:20:52"}},{"label":"js_数组中自定义属性的应用","key":"jsjs_数组中自定义属性的应用","data":{"date":"2016-05-20 11:30:20"}},{"label":"网站中_如何通过一个信息_确定该标签的在页面的位置信息_","key":"js网站中_如何通过一个信息_确定该标签的在页面的位置信息_","data":{"date":"2016-04-21 09:23:17"}},{"label":"为什么要把jsonp理解的那么神圣_一个动态的js文件而已","key":"js为什么要把jsonp理解的那么神圣_一个动态的js文件而已","data":{"date":"2016-04-20 04:54:40"}},{"label":"js_提示窗","key":"jsjs_提示窗","data":{"date":"2014/12/22 9:58:00"}},{"label":"初入ajax","key":"js初入ajax","data":{"date":"2014/12/8 11:52:00"}},{"label":"js_操作cookie","key":"jsjs_操作cookie","data":{"date":"2014/11/27 4:25:00"}},{"label":"原生js_对图片的压缩上传","key":"js原生js_对图片的压缩上传","data":{"date":"2014/11/27 4:20:00"}},{"label":"300_毫秒点击延迟的来龙去脉_以及临时的解决方案","key":"js300_毫秒点击延迟的来龙去脉_以及临时的解决方案","data":{"date":"2014/11/10 5:50:00"}},{"label":"兼容ie5-ie11及其他主流浏览器的js_document.getElementsByClassName_方法","key":"js兼容ie5-ie11及其他主流浏览器的js_document.getElementsByClassName_方法","data":{"date":"2014/6/29 3:59:00"}},{"label":"jquery_tag页签切换","key":"jsjquery_tag页签切换","data":{"date":"2014/5/11 3:53:00"}},{"label":"js_判断浏览器关闭事件_兼容所有浏览器","key":"jsjs_判断浏览器关闭事件_兼容所有浏览器","data":{"date":"2014/5/10 4:27:00"}},{"label":"jQuery实现锚点与链接之间的平滑滚动","key":"jsjQuery实现锚点与链接之间的平滑滚动","data":{"date":"2014/4/29 4:25:00"}}]},{"label":"markdown","key":"前端markdown","children":[{"label":"实现md合并单元格","key":"markdown实现md合并单元格","data":{"date":"2021-12-29 14:50:33"}},{"label":"markdown中使用变量","key":"markdownmarkdown中使用变量","data":{"date":"2021-12-24 13:24:02"}}]},{"label":"npm_yarn","key":"前端npm_yarn","children":[{"label":"使用npm给yarn升级","key":"npm_yarn使用npm给yarn升级","data":{"date":"2021-12-16 00:09:33"}},{"label":"windows上_node-sass_less编译失败的终极解决方案","key":"npm_yarnwindows上_node-sass_less编译失败的终极解决方案","data":{"date":"2021/11/12 3:54:05"}},{"label":"yarn_无法加载文件","key":"npm_yarnyarn_无法加载文件","data":{"date":"2021/9/5 8:04:04"}},{"label":"nrm_ls_报错_ERR_INVALID_ARG_TYPE","key":"npm_yarnnrm_ls_报错_ERR_INVALID_ARG_TYPE","data":{"date":"2021/8/18 11:25:58"}},{"label":"vscode中_yarn_无法加载文件_C_Users_Admin_AppData_Roaming_npm_yarn.ps1,因为在此系统因为在此系统上禁止运行脚本","key":"npm_yarnvscode中_yarn_无法加载文件_C_Users_Admin_AppData_Roaming_npm_yarn.ps1,因为在此系统因为在此系统上禁止运行脚本","data":{"date":"2021/8/18 11:09:24"}},{"label":"Building_fresh_packages_很长时间无反应","key":"npm_yarnBuilding_fresh_packages_很长时间无反应","data":{"date":"2021/7/26 1:24:20"}},{"label":"Failed_to_connect_to_github.com_port_443_Timed_out","key":"npm_yarnFailed_to_connect_to_github.com_port_443_Timed_out","data":{"date":"2021/5/25 8:58:22"}},{"label":"RPC_failed;_curl_56_OpenSSL_SSL_read_Connection_was_reset,_errno_10054","key":"npm_yarnRPC_failed;_curl_56_OpenSSL_SSL_read_Connection_was_reset,_errno_10054","data":{"date":"2021/5/25 8:55:38"}},{"label":"nrm——npm镜像管理工具使用入门","key":"npm_yarnnrm——npm镜像管理工具使用入门","data":{"date":"2021/5/14 11:41:10"}},{"label":"npm_yarn_切换安装源或使用代理进行安装","key":"npm_yarnnpm_yarn_切换安装源或使用代理进行安装","data":{"date":"2021/5/14 11:09:15"}}]},{"label":"other","key":"前端other","children":[{"label":"区块链学习-常用链接和教程","key":"other区块链学习-常用链接和教程","data":{"date":"2021/6/8 6:37:40"}}]},{"label":"油猴","key":"前端油猴","children":[{"label":"把_Tampermonkey_功能放到全局","key":"油猴把_Tampermonkey_功能放到全局","data":{"date":"2021/9/14 10:56:54"}},{"label":"工作辅助工具","key":"油猴工作辅助工具","data":{"date":"2021/9/14 7:20:01"}},{"label":"油猴脚本开发文档-Tampermonkey_Documention_api","key":"油猴油猴脚本开发文档-Tampermonkey_Documention_api","data":{"date":"2021/9/14 2:08:10"}},{"label":"第三方链接自动跳转-知乎微博csdn等","key":"油猴第三方链接自动跳转-知乎微博csdn等","data":{"date":"2021/6/9 2:25:59"}},{"label":"浏览器插件离线包","key":"油猴浏览器插件离线包","data":{"date":"2021/3/23 2:49:05"}},{"label":"代理工具_Whistle_页面显示优化脚本","key":"油猴代理工具_Whistle_页面显示优化脚本","data":{"date":"2020/9/23 1:26:37"}},{"label":"清除cnblog广告_清爽页面","key":"油猴清除cnblog广告_清爽页面","data":{"date":"2020/9/17 4:05:39"}},{"label":"清除csdn广告_清爽页面","key":"油猴清除csdn广告_清爽页面","data":{"date":"2020/9/17 4:01:41"}},{"label":"摹客ui稿web样式转化成ReactNative格式","key":"油猴摹客ui稿web样式转化成ReactNative格式","data":{"date":"2020/9/17 3:51:35"}},{"label":"工作-gitlab项目_提交合并请求时_自动识别分支","key":"油猴工作-gitlab项目_提交合并请求时_自动识别分支","data":{"date":"2020/9/17 3:45:25"}},{"label":"两个小时写了一个无广告版_百度搜索","key":"油猴两个小时写了一个无广告版_百度搜索","data":{"date":"2018-10-24 03:50:01"}},{"label":"简单几行代码_写一个百度广告屏蔽插件_爽到爆","key":"油猴简单几行代码_写一个百度广告屏蔽插件_爽到爆","data":{"date":"2017-09-13 05:19:36"}},{"label":"基于_Tampermonkey插件的_百度广告屏蔽脚本","key":"油猴基于_Tampermonkey插件的_百度广告屏蔽脚本","data":{"date":"2017-05-17 12:05:10"}}]},{"label":"问题","key":"前端问题","children":[{"label":"vue-i18n中语言项不能使用对象_","key":"问题vue-i18n中语言项不能使用对象_","data":{"date":"2020-05-13 10:11:03"}},{"label":"electron_使用淘宝镜像出现404问题","key":"问题electron_使用淘宝镜像出现404问题","data":{"date":"2020-03-18 07:59:56"}},{"label":"webstorm出现提示时_无法执行Ctrl_V","key":"问题webstorm出现提示时_无法执行Ctrl_V","data":{"date":"2020-02-23 09:01:00"}},{"label":"npm_-v_一直卡住","key":"问题npm_-v_一直卡住","data":{"date":"2019-11-10 01:25:24"}},{"label":"webpack中的externals无效是怎么回事_","key":"问题webpack中的externals无效是怎么回事_","data":{"date":"2019-11-04 04:55:00"}},{"label":"美团网页的header中有一个x-for-with是如何加密的_","key":"问题美团网页的header中有一个x-for-with是如何加密的_","data":{"date":"2019-04-15 06:42:02"}},{"label":"js处理大数字的问题","key":"问题js处理大数字的问题","data":{"date":"2019-02-26 01:12:40"}},{"label":"安卓微信中_select背景色无法去掉_","key":"问题安卓微信中_select背景色无法去掉_","data":{"date":"2018-11-21 11:41:15"}},{"label":"sbulime_插件_HTML-CSS-JS_Prettify_的_bug","key":"问题sbulime_插件_HTML-CSS-JS_Prettify_的_bug","data":{"date":"2018-11-21 01:30:22"}},{"label":"谷歌翻译_语音翻译接口是怎么提交语音的_","key":"问题谷歌翻译_语音翻译接口是怎么提交语音的_","data":{"date":"2018-10-24 11:06:48"}},{"label":"正则匹配单行注释问题","key":"问题正则匹配单行注释问题","data":{"date":"2018-10-09 06:39:47"}},{"label":"怎么解决promise只执行一次的问题","key":"问题怎么解决promise只执行一次的问题","data":{"date":"2018-09-29 01:49:23"}},{"label":"vue-router_能实现pushstate模式进行query进行传参吗_","key":"问题vue-router_能实现pushstate模式进行query进行传参吗_","data":{"date":"2018-08-25 08:03:29"}},{"label":"ajax请求图片_二进制形式显示图片有问题","key":"问题ajax请求图片_二进制形式显示图片有问题","data":{"date":"2018-07-23 10:20:42"}},{"label":"vue2_0_router内watch监听不到route变化_","key":"问题vue2_0_router内watch监听不到route变化_","data":{"date":"2018-06-05 01:27:45"}},{"label":"定义了一个vue全局方法_不能再vuex中进行调用","key":"问题定义了一个vue全局方法_不能再vuex中进行调用","data":{"date":"2018-05-18 10:40:11"}},{"label":"正则怎么匹配_ffffff,_000000,而不识别_fff000","key":"问题正则怎么匹配_ffffff,_000000,而不识别_fff000","data":{"date":"2018-05-11 11:18:25"}},{"label":"vue_多次调用组件冲突","key":"问题vue_多次调用组件冲突","data":{"date":"2018-05-04 04:03:54"}},{"label":"css怎么修改图片加载失败的小图标","key":"问题css怎么修改图片加载失败的小图标","data":{"date":"2018-05-02 06:49:08"}},{"label":"正则如何匹配完整的script标签","key":"问题正则如何匹配完整的script标签","data":{"date":"2018-04-24 05:10:37"}},{"label":"js正则怎么删除单行注释_","key":"问题js正则怎么删除单行注释_","data":{"date":"2018-04-20 11:21:23"}},{"label":"curl_请求参数分析","key":"问题curl_请求参数分析","data":{"date":"2018-03-29 06:30:54"}},{"label":"一个简单的vue_router_异步组件的问题","key":"问题一个简单的vue_router_异步组件的问题","data":{"date":"2018-03-24 09:59:35"}},{"label":"js中科学计数法转数字的问题","key":"问题js中科学计数法转数字的问题","data":{"date":"2018-03-23 04:39:33"}},{"label":"一个swiperjs的网格布局问题","key":"问题一个swiperjs的网格布局问题","data":{"date":"2018-01-11 10:44:35"}},{"label":"vue2如何实现数组的某一项变化_给这一项添加临时特效","key":"问题vue2如何实现数组的某一项变化_给这一项添加临时特效","data":{"date":"2017-12-15 10:52:30"}},{"label":"vue_router_在template中循环时_不能显示带有参数的路由地址_","key":"问题vue_router_在template中循环时_不能显示带有参数的路由地址_","data":{"date":"2017-10-24 07:17:21"}},{"label":"axios_post请求_控制台查看却是OPTIONS_不是post请求","key":"问题axios_post请求_控制台查看却是OPTIONS_不是post请求","data":{"date":"2017-09-29 11:29:56"}},{"label":"使用axios的post请求_请求参数好像有问题啊","key":"问题使用axios的post请求_请求参数好像有问题啊","data":{"date":"2017-09-29 01:01:54"}},{"label":"package_json中的node-sass无法安装","key":"问题package_json中的node-sass无法安装","data":{"date":"2017-09-13 03:26:10"}},{"label":"安卓手机中使用html的input_file_获取不到文件类型和文件名","key":"问题安卓手机中使用html的input_file_获取不到文件类型和文件名","data":{"date":"2017-04-27 07:30:00"}},{"label":"vue2_出现绑定不解析的问题_attr=_quot;obj_quot;_变成了_attr=_object_object_","key":"问题vue2_出现绑定不解析的问题_attr=_quot;obj_quot;_变成了_attr=_object_object_","data":{"date":"2017-04-20 03:06:23"}},{"label":"Access-Control-Allow-Origin_如何设置多个值呢","key":"问题Access-Control-Allow-Origin_如何设置多个值呢","data":{"date":"2017-04-06 10:23:04"}},{"label":"vue_双向绑定问题_emit无效","key":"问题vue_双向绑定问题_emit无效","data":{"date":"2017-03-15 11:43:59"}},{"label":"如何比较版本号大小类似9_11_1和9_2_9","key":"问题如何比较版本号大小类似9_11_1和9_2_9","data":{"date":"2017-01-12 03:48:46"}},{"label":"h5页面在iphone上字体变形","key":"问题h5页面在iphone上字体变形","data":{"date":"2017-01-10 03:31:47"}},{"label":"sass_mixin问题","key":"问题sass_mixin问题","data":{"date":"2017-01-09 01:56:16"}},{"label":"avalonjs_对body之外的绑定无效","key":"问题avalonjs_对body之外的绑定无效","data":{"date":"2016-12-27 12:00:10"}},{"label":"vue_自动添加前缀问题","key":"问题vue_自动添加前缀问题","data":{"date":"2016-12-20 02:03:12"}},{"label":"chrome_alarms没起作用_","key":"问题chrome_alarms没起作用_","data":{"date":"2016-11-16 12:46:36"}},{"label":"javascript如何判断浏览器是否支持_引号_","key":"问题javascript如何判断浏览器是否支持_引号_","data":{"date":"2016-10-28 02:37:41"}},{"label":"vue2_el不能是标签_必须是body内部一个标签的id吗","key":"问题vue2_el不能是标签_必须是body内部一个标签的id吗","data":{"date":"2016-10-27 02:10:04"}},{"label":"移动端cursor_pointer问题","key":"问题移动端cursor_pointer问题","data":{"date":"2016-10-25 04:00:10"}},{"label":"微信分享_icon图片不显示问题","key":"问题微信分享_icon图片不显示问题","data":{"date":"2016-08-23 04:37:32"}},{"label":"怎样同时启动gulp和json-server服务_","key":"问题怎样同时启动gulp和json-server服务_","data":{"date":"2016-07-20 06:36:25"}},{"label":"如何给vue异步组件绑定事件","key":"问题如何给vue异步组件绑定事件","data":{"date":"2016-06-17 11:33:52"}},{"label":"获取js点击点相对被点击元素的位置_click与touch的区别","key":"问题获取js点击点相对被点击元素的位置_click与touch的区别","data":{"date":"2016-06-16 11:32:18"}},{"label":"js事件冒泡和捕获问题在block和inline上的不同表现","key":"问题js事件冒泡和捕获问题在block和inline上的不同表现","data":{"date":"2016-06-15 05:53:52"}},{"label":"求哪几个数字之和接近某一个给定的值_小于等于_","key":"问题求哪几个数字之和接近某一个给定的值_小于等于_","data":{"date":"2016-06-10 09:28:52"}},{"label":"css,js预编译如何保留头部注释信息_","key":"问题css,js预编译如何保留头部注释信息_","data":{"date":"2016-06-01 01:49:43"}},{"label":"cdn上css文件引入页面后_response为空","key":"问题cdn上css文件引入页面后_response为空","data":{"date":"2016-05-31 09:19:34"}},{"label":"不确定图片高度情况下_如何实现瀑布流布局_","key":"问题不确定图片高度情况下_如何实现瀑布流布局_","data":{"date":"2016-05-18 03:21:26"}},{"label":"js正则不支持持后瞻的问题","key":"问题js正则不支持持后瞻的问题","data":{"date":"2016-04-24 04:17:30"}},{"label":"input_type=file_的_maxLength是多少","key":"问题input_type=file_的_maxLength是多少","data":{"date":"2016-03-28 11:27:57"}}]}]},{"label":"移动端","key":"移动端","children":[{"label":"Android Studio","key":"移动端Android Studio","children":[{"label":"Android_Studio新建项目时_没有flutter选项_","key":"Android StudioAndroid_Studio新建项目时_没有flutter选项_","data":{"date":"2021/7/27 11:24:17"}}]},{"label":"android","key":"移动端android","children":[{"label":"android项目启动报错_java.util.concurrent.ExecutionException","key":"androidandroid项目启动报错_java.util.concurrent.ExecutionException","data":{"date":"2021/6/26 12:52:24"}},{"label":"浏览器不支持double类型引发的血案","key":"android浏览器不支持double类型引发的血案","data":{"date":"2021/7/3 7:21:57"}}]},{"label":"flutter","key":"移动端flutter","children":[{"label":"Flutter_报错_setState()_called_after_dispose()","key":"flutterFlutter_报错_setState()_called_after_dispose()","data":{"date":"2021/7/6 11:27:16"}},{"label":"The_flutter_SDK_is_incomplete=Flutter_SDK_安装不完整","key":"flutterThe_flutter_SDK_is_incomplete=Flutter_SDK_安装不完整","data":{"date":"2021/7/27 11:34:35"}},{"label":"flutter_build_时报错_fatal_error_Flutter_Flutter.h_file_not_found","key":"flutterflutter_build_时报错_fatal_error_Flutter_Flutter.h_file_not_found","data":{"date":"2021/7/14 10:33:29"}},{"label":"flutter函数形参是必选项","key":"flutterflutter函数形参是必选项","data":{"date":"2021/7/17 9:19:55"}},{"label":"flutter文档链接","key":"flutterflutter文档链接","data":{"date":"2021/6/30 11:42:11"}},{"label":"flutter环境搭建_（windows）","key":"flutterflutter环境搭建_（windows）","data":{"date":"2021/6/29 4:15:03"}},{"label":"为什么flutter_中initState不执行_","key":"flutter为什么flutter_中initState不执行_","data":{"date":"2021/7/1 7:39:40"}},{"label":"运行flutter应用时_长时间卡在Running_Gradle_task_assembleDebug_","key":"flutter运行flutter应用时_长时间卡在Running_Gradle_task_assembleDebug_","data":{"date":"2019-12-31 01:55:10"}}]},{"label":"xcode","key":"移动端xcode","children":[{"label":"Mac_解决_gyp_No_Xcode_or_CLT_version_detected_报错","key":"xcodeMac_解决_gyp_No_Xcode_or_CLT_version_detected_报错","data":{"date":"2021/5/18 7:04:19"}}]},{"label":"问题","key":"移动端问题","children":[{"label":"swift_3的一个helloworld级别的错误","key":"问题swift_3的一个helloworld级别的错误","data":{"date":"2017-11-22 09:59:03"}}]}]},{"label":"系统","key":"系统","children":[{"label":"MongoDB","key":"系统MongoDB","children":[{"label":"MongoDB学习1-的下载下载链接","key":"MongoDBMongoDB学习1-的下载下载链接","data":{"date":"2020/12/5 1:18:38"}}]},{"label":"nginx","key":"系统nginx","children":[{"label":"nginx远程接口到本地使用","key":"nginxnginx远程接口到本地使用","data":{"date":"2017-09-29 12:40:56"}},{"label":"一段万能的nginx接口反向代理配置","key":"nginx一段万能的nginx接口反向代理配置","data":{"date":"2018-09-30 05:20:16"}}]},{"label":"nodejs","key":"系统nodejs","children":[{"label":"http和http2的区别（代码示例）","key":"nodejshttp和http2的区别（代码示例）","data":{"date":"2021/1/10 11:33:22"}},{"label":"nodejs_压缩图片-支持jpg和png","key":"nodejsnodejs_压缩图片-支持jpg和png","data":{"date":"2021/5/28 1:00:25"}},{"label":"nodejs使用canvas合成图片","key":"nodejsnodejs使用canvas合成图片","data":{"date":"2021/5/27 7:31:41"}},{"label":"nodejs使用socket5进行代理请求","key":"nodejsnodejs使用socket5进行代理请求","data":{"date":"2020-02-20 05:14:33"}},{"label":"nodejs做了一个网易相册全量下载工具","key":"nodejsnodejs做了一个网易相册全量下载工具","data":{"date":"2019-03-14 04:19:07"}},{"label":"nodejs提取gif中的图片","key":"nodejsnodejs提取gif中的图片","data":{"date":"2021/6/9 11:36:41"}},{"label":"nodejs的http_get,http_request怎么优雅的添加timeout_","key":"nodejsnodejs的http_get,http_request怎么优雅的添加timeout_","data":{"date":"2020-02-18 11:06:48"}},{"label":"从gif提取所有图片","key":"nodejs从gif提取所有图片","data":{"date":"2021/6/9 12:43:26"}},{"label":"使用openssl生成证书","key":"nodejs使用openssl生成证书","data":{"date":"2021-12-24 15:23:34"}},{"label":"前端工程师通过nodejs链接linux_并上传代码进行半自动化更新_省去ssh_ftp的链接工具","key":"nodejs前端工程师通过nodejs链接linux_并上传代码进行半自动化更新_省去ssh_ftp的链接工具","data":{"date":"2019-04-25 04:38:40"}},{"label":"简易搭建nodejs服务器","key":"nodejs简易搭建nodejs服务器","data":{"date":"2021-12-24 13:35:46"}}]},{"label":"php","key":"系统php","children":[{"label":"PHP获取IP地址及根据IP判断城市实现城市切换或跳转","key":"phpPHP获取IP地址及根据IP判断城市实现城市切换或跳转","data":{"date":"2014/4/29 5:27:00"}},{"label":"php_将Unicode_转成汉字","key":"phpphp_将Unicode_转成汉字","data":{"date":"2014/5/5 3:23:00"}},{"label":"php_获取_手机浏览器的信息_获取手机号","key":"phpphp_获取_手机浏览器的信息_获取手机号","data":{"date":"2014/5/3 11:33:00"}},{"label":"php判断浏览器的相关文章_教程_源码","key":"phpphp判断浏览器的相关文章_教程_源码","data":{"date":"2014/5/3 11:38:00"}},{"label":"php监听客户端连接状态","key":"phpphp监听客户端连接状态","data":{"date":"2014/5/3 11:37:00"}},{"label":"windows_10_中_java_设置path不起作用","key":"phpwindows_10_中_java_设置path不起作用","data":{"date":"2017-07-22 02:25:56"}}]},{"label":"windows","key":"系统windows","children":[{"label":"1_PC微信Hook实战记录1_找到个人信息","key":"windows1_PC微信Hook实战记录1_找到个人信息","data":{"date":"2020/11/11 6:43:05"}},{"label":"2_微信Hook实战记录2_动手实现dll内存插入器","key":"windows2_微信Hook实战记录2_动手实现dll内存插入器","data":{"date":"2020/11/11 6:46:28"}},{"label":"Windows10系统如何安装ms-windows-store","key":"windowsWindows10系统如何安装ms-windows-store","data":{"date":"2020/11/23 1:35:12"}},{"label":"win10_微信多开_企微多开","key":"windowswin10_微信多开_企微多开","data":{"date":"2020/9/21 11:19:47"}},{"label":"window10_的10000端口莫名被占用_一步步定位到找到根源","key":"windowswindow10_的10000端口莫名被占用_一步步定位到找到根源","data":{"date":"2021/4/14 1:47:05"}},{"label":"windows查看支持最大内存","key":"windowswindows查看支持最大内存","data":{"date":"2021/9/5 6:42:29"}},{"label":"企业微信Windows版本调试（底部有mac教程）","key":"windows企业微信Windows版本调试（底部有mac教程）","data":{"date":"2020/11/17 12:42:16"}},{"label":"安装Puppeteer时跳过Chromium下载","key":"windows安装Puppeteer时跳过Chromium下载","data":{"date":"2023-01-22 08:26:07"}},{"label":"微信Hook逆向教程完整视频","key":"windows微信Hook逆向教程完整视频","data":{"date":"2020/11/11 6:52:55"}},{"label":"微信逆向之朋友圈","key":"windows微信逆向之朋友圈","data":{"date":"2020/11/11 7:04:08"}},{"label":"怎么修改hosts文件","key":"windows怎么修改hosts文件","data":{"date":"2021/5/25 9:03:29"}},{"label":"联想笔记本e480_切换电源时黑屏问题","key":"windows联想笔记本e480_切换电源时黑屏问题","data":{"date":"2021/1/20 11:11:28"}}]},{"label":"代理","key":"系统代理","children":[{"label":"Charles_青花瓷代理工具注册码","key":"代理Charles_青花瓷代理工具注册码","data":{"date":"2020/11/20 11:25:13"}},{"label":"SwitchyOmega_Chrome_Win10_环境下_SOCKS5_协议问题","key":"代理SwitchyOmega_Chrome_Win10_环境下_SOCKS5_协议问题","data":{"date":"2020/11/24 1:00:52"}},{"label":"whistle代理配置","key":"代理whistle代理配置","data":{"date":"2021/3/1 7:27:28"}},{"label":"whistle前端开发代理工具使用入门","key":"代理whistle前端开发代理工具使用入门","data":{"date":"2021/5/14 10:59:34"}}]},{"label":"问题","key":"系统问题","children":[{"label":"java怎么将utc字符串转成时间戳_","key":"问题java怎么将utc字符串转成时间戳_","data":{"date":"2018-07-06 02:36:16"}},{"label":"nginx_反向代理配置后_首页404","key":"问题nginx_反向代理配置后_首页404","data":{"date":"2018-06-17 07:50:52"}},{"label":"nodejs_如何模拟请求一个ws_socket的请求_","key":"问题nodejs_如何模拟请求一个ws_socket的请求_","data":{"date":"2019-04-12 03:37:26"}},{"label":"nodejs_的watch执行回调两次_","key":"问题nodejs_的watch执行回调两次_","data":{"date":"2018-04-13 05:04:21"}},{"label":"pc微信上传文件_不能切片上传","key":"问题pc微信上传文件_不能切片上传","data":{"date":"2017-06-05 06:33:20"}},{"label":"使用itchat时_消息更新不及时_需要缩放一下命令行窗口_才能处罚更新_这是怎么回事_","key":"问题使用itchat时_消息更新不及时_需要缩放一下命令行窗口_才能处罚更新_这是怎么回事_","data":{"date":"2019-02-13 04:18:08"}},{"label":"使用nodejs_如何模拟一个socket请求_","key":"问题使用nodejs_如何模拟一个socket请求_","data":{"date":"2019-05-15 06:21:44"}},{"label":"使用phpstudy的apache开启ssl服务_通过https访问网页_拒绝请求_无法访问","key":"问题使用phpstudy的apache开启ssl服务_通过https访问网页_拒绝请求_无法访问","data":{"date":"2017-09-29 11:15:53"}},{"label":"如何使用nodejs的http模块模拟请求_并带上navigator等信息","key":"问题如何使用nodejs的http模块模拟请求_并带上navigator等信息","data":{"date":"2019-03-19 05:31:16"}},{"label":"给服务器加了一个开机执行脚本_最后加了一行exit_0_,现在连不上服务器了_急急急！！！","key":"问题给服务器加了一个开机执行脚本_最后加了一行exit_0_,现在连不上服务器了_急急急！！！","data":{"date":"2018-12-29 06:55:32"}}]}]},{"label":"音视频","key":"音视频","children":[{"label":"ffmpeg","key":"音视频ffmpeg","children":[{"label":"ffmpeg-doc","key":"ffmpegffmpeg-doc","data":{"date":"2021-12-27 20:57:01"}},{"label":"ffmpeg_sox实现录音降噪","key":"ffmpegffmpeg_sox实现录音降噪","data":{"date":"2022-01-05 21:43:45"}},{"label":"ffmpeg_切割mp4为m3u8格式","key":"ffmpegffmpeg_切割mp4为m3u8格式","data":{"date":"2021/2/27 1:36:44"}},{"label":"ffmpeg压缩视频","key":"ffmpegffmpeg压缩视频","data":{"date":"2021/2/27 1:43:01"}},{"label":"ffmpeg参数详解","key":"ffmpegffmpeg参数详解","data":{"date":"2022-01-05 21:38:23"}},{"label":"ffmpeg参数说明","key":"ffmpegffmpeg参数说明","data":{"date":"2021/2/27 1:40:05"}},{"label":"ffmpeg命令行map参数选择音视频流","key":"ffmpegffmpeg命令行map参数选择音视频流","data":{"date":"2021-12-27 20:54:45"}},{"label":"ffmpeg基本用法","key":"ffmpegffmpeg基本用法","data":{"date":"2021-12-27 08:41:52"}},{"label":"ffmpeg多视频多音轨合并","key":"ffmpegffmpeg多视频多音轨合并","data":{"date":"2021-12-27 20:45:00"}},{"label":"ffmpeg录屏录音","key":"ffmpegffmpeg录屏录音","data":{"date":"2022-01-05 21:23:25"}},{"label":"ffmpeg截取视频","key":"ffmpegffmpeg截取视频","data":{"date":"2021-12-30 21:28:27"}},{"label":"ffmpeg把本地文件作为直播源","key":"ffmpegffmpeg把本地文件作为直播源","data":{"date":"2021/2/27 1:41:23"}},{"label":"使用ffmpeg分离视频流和音频流","key":"ffmpeg使用ffmpeg分离视频流和音频流","data":{"date":"2021-12-27 08:10:42"}}]}]}]},"__N_SSG":true}